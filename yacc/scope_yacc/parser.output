Terminals unused in grammar

   INLINE
   RESTRICT
   _BOOL
   _COMPLEX
   _IMAGINARY
   _ALIGNAS
   _ALIGNOF
   _ATOMIC
   _STATIC_ASSERT
   _NORETURN
   _THREAD_LOCAL
   _GENERIC


Rules useless in parser due to conflicts

  218 const_type: STRING


State 22 conflicts: 31 reduce/reduce
State 27 conflicts: 20 shift/reduce
State 28 conflicts: 20 shift/reduce
State 29 conflicts: 21 shift/reduce
State 30 conflicts: 20 shift/reduce
State 35 conflicts: 1 shift/reduce
State 39 conflicts: 1 shift/reduce
State 50 conflicts: 20 shift/reduce
State 54 conflicts: 2 shift/reduce
State 57 conflicts: 1 shift/reduce
State 66 conflicts: 1 shift/reduce
State 79 conflicts: 15 shift/reduce
State 80 conflicts: 15 shift/reduce
State 113 conflicts: 2 reduce/reduce
State 133 conflicts: 35 reduce/reduce
State 150 conflicts: 5 reduce/reduce
State 206 conflicts: 4 reduce/reduce
State 345 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 translation_unit: external_decl
    2                 | translation_unit external_decl

    3 external_decl: function_definition
    4              | decl

    5 function_definition: decl_specs declarator decl_list compound_stat
    6                    | declarator decl_list compound_stat
    7                    | decl_specs declarator compound_stat
    8                    | decl_specs declarator
    9                    | declarator compound_stat

   10 decl: decl_specs init_declarator_list SEMI
   11     | decl_specs SEMI

   12 decl_list: decl
   13          | decl_list decl

   14 decl_specs: storage_class_spec decl_specs
   15           | storage_class_spec
   16           | type_spec decl_specs
   17           | type_spec direct_declarator
   18           | type_spec
   19           | type_qualifier decl_specs
   20           | type_qualifier

   21 storage_class_spec: AUTO
   22                   | REGISTER
   23                   | STATIC
   24                   | EXTERN
   25                   | TYPEDEF

   26 type_spec: VOID
   27          | CHAR
   28          | SHORT
   29          | INT
   30          | LONG
   31          | FLOAT
   32          | DOUBLE
   33          | SIGNED
   34          | UNSIGNED
   35          | struct_or_union_spec
   36          | enum_spec
   37          | typedef_name

   38 type_qualifier: CONST
   39               | VOLATILE

   40 struct_or_union_spec: struct_or_union IDENTITY BRACE_L struct_decl_list BRACE_R
   41                     | struct_or_union BRACE_L struct_decl_list BRACE_R
   42                     | struct_or_union IDENTITY

   43 struct_or_union: STRUCT
   44                | UNION

   45 struct_decl_list: struct_decl
   46                 | struct_decl_list struct_decl

   47 init_declarator_list: init_declarator
   48                     | init_declarator_list COMMA init_declarator

   49 init_declarator: declarator
   50                | declarator ASSIGN initializer

   51 struct_decl: spec_qualifier_list struct_declarator_list SEMI

   52 spec_qualifier_list: type_spec spec_qualifier_list
   53                    | type_spec
   54                    | type_qualifier spec_qualifier_list
   55                    | type_qualifier

   56 struct_declarator_list: struct_declarator
   57                       | struct_declarator_list COMMA struct_declarator

   58 struct_declarator: declarator
   59                  | declarator COLON const_exp
   60                  | COLON const_exp

   61 enum_spec: ENUM IDENTITY BRACE_L enumerator_list BRACE_R
   62          | ENUM BRACE_L enumerator_list BRACE_R
   63          | ENUM IDENTITY

   64 enumerator_list: enumerator
   65                | enumerator_list COMMA enumerator

   66 enumerator: IDENTITY
   67           | IDENTITY ASSIGN const_exp

   68 declarator: pointer direct_declarator
   69           | direct_declarator
   70           | decl_specs

   71 direct_declarator: IDENTITY
   72                  | PARENTHESE_L declarator PARENTHESE_R
   73                  | direct_declarator BRACKET_L const_exp BRACKET_R
   74                  | direct_declarator BRACKET_L BRACKET_R
   75                  | direct_declarator PARENTHESE_L param_type_list PARENTHESE_R
   76                  | direct_declarator PARENTHESE_L id_list PARENTHESE_R
   77                  | direct_declarator PARENTHESE_L PARENTHESE_R

   78 pointer: MUL type_qualifier_list
   79        | MUL
   80        | MUL type_qualifier_list pointer
   81        | MUL pointer

   82 type_qualifier_list: type_qualifier
   83                    | type_qualifier_list type_qualifier

   84 param_type_list: param_list
   85                | param_list COMMA ELLIPSIS

   86 param_list: param_decl
   87           | param_list COMMA param_decl

   88 param_decl: decl_specs declarator
   89           | decl_specs abstract_declarator
   90           | decl_specs

   91 id_list: IDENTITY
   92        | id_list COMMA IDENTITY

   93 initializer: assignment_exp
   94            | BRACE_L initializer_list BRACE_R
   95            | BRACE_L initializer_list COMMA BRACE_R

   96 initializer_list: initializer
   97                 | initializer_list COMMA initializer

   98 type_name: spec_qualifier_list abstract_declarator
   99          | spec_qualifier_list

  100 abstract_declarator: pointer
  101                    | pointer direct_abstract_declarator
  102                    | direct_abstract_declarator

  103 direct_abstract_declarator: PARENTHESE_L abstract_declarator PARENTHESE_R
  104                           | direct_abstract_declarator BRACKET_L const_exp BRACKET_R
  105                           | BRACKET_L const_exp BRACKET_R
  106                           | direct_abstract_declarator BRACKET_L BRACKET_R
  107                           | BRACKET_L BRACKET_R
  108                           | direct_abstract_declarator BRACE_L param_type_list BRACE_R
  109                           | BRACE_L param_type_list BRACE_R
  110                           | direct_abstract_declarator BRACE_L BRACE_R
  111                           | BRACE_L BRACE_R

  112 typedef_name: IDENTITY

  113 stat: labeled_stat
  114     | exp_stat
  115     | compound_stat
  116     | selection_stat
  117     | iteration_stat
  118     | jump_stat

  119 labeled_stat: IDENTITY COLON stat
  120             | CASE const_exp COLON stat
  121             | DEFAULT COLON stat

  122 exp_stat: COLON SEMI
  123         | SEMI

  124 compound_stat: BRACE_L decl_list stat_list BRACE_R
  125              | BRACE_L stat_list BRACE_R
  126              | BRACE_L decl_list BRACE_R
  127              | BRACE_L BRACE_R

  128 stat_list: stat
  129          | stat_list stat

  130 selection_stat: IF PARENTHESE_L exp PARENTHESE_R stat
  131               | IF PARENTHESE_L exp PARENTHESE_R stat ELSE stat
  132               | SWITCH PARENTHESE_L exp PARENTHESE_R stat

  133 iteration_stat: WHILE PARENTHESE_L exp PARENTHESE_R stat
  134               | DO stat WHILE PARENTHESE_L exp PARENTHESE_R SEMI
  135               | FOR PARENTHESE_L exp SEMI exp SEMI exp PARENTHESE_R stat
  136               | FOR PARENTHESE_L exp SEMI exp SEMI PARENTHESE_R stat
  137               | FOR PARENTHESE_L exp SEMI SEMI exp PARENTHESE_R stat
  138               | FOR PARENTHESE_L exp SEMI SEMI PARENTHESE_R stat
  139               | FOR PARENTHESE_L SEMI exp SEMI exp PARENTHESE_R stat
  140               | FOR PARENTHESE_L SEMI exp SEMI PARENTHESE_R stat
  141               | FOR PARENTHESE_L SEMI SEMI exp PARENTHESE_R stat
  142               | FOR PARENTHESE_L SEMI SEMI PARENTHESE_R stat

  143 jump_stat: GOTO IDENTITY SEMI
  144          | CONTINUE SEMI
  145          | BREAK SEMI
  146          | RETURN exp SEMI
  147          | RETURN SEMI

  148 exp: assignment_exp
  149    | exp COMMA assignment_exp

  150 assignment_exp: conditional_exp
  151               | unary_exp assignment_operator assignment_exp

  152 assignment_operator: ASSIGN
  153                    | ASSIGN_OP
  154                    | ASSIGN_SHIFTL
  155                    | ASSIGN_SHIFTR

  156 conditional_exp: logical_or_exp
  157                | logical_or_exp QUES exp COLON

  158 const_exp: conditional_exp
  159          | primary_exp

  160 logical_or_exp: logical_and_exp
  161               | logical_or_exp OR logical_and_exp

  162 logical_and_exp: inclusive_or_exp
  163                | logical_and_exp AND inclusive_or_exp

  164 inclusive_or_exp: exclusive_or_exp
  165                 | inclusive_or_exp OR_OP exclusive_or_exp

  166 exclusive_or_exp: and_exp
  167                 | exclusive_or_exp XOR_OP and_exp

  168 and_exp: equality_exp
  169        | and_exp AND_OP equality_exp

  170 equality_exp: relational_exp
  171             | equality_exp EQUAL relational_exp
  172             | equality_exp NOT_EQUAL relational_exp

  173 relational_exp: shift_expression
  174               | relational_exp LESSER shift_expression
  175               | relational_exp GREATER shift_expression
  176               | relational_exp LEQUAL shift_expression
  177               | relational_exp GEQUAL shift_expression

  178 shift_expression: additive_exp
  179                 | shift_expression MOVE_L additive_exp
  180                 | shift_expression MOVE_R additive_exp

  181 additive_exp: mult_exp
  182             | additive_exp ADD mult_exp
  183             | additive_exp SUB mult_exp

  184 mult_exp: cast_exp
  185         | mult_exp MUL cast_exp
  186         | mult_exp DIV cast_exp
  187         | mult_exp MOD cast_exp

  188 cast_exp: unary_exp
  189         | PARENTHESE_L type_name PARENTHESE_R cast_exp

  190 unary_exp: postfix_exp
  191          | POST_ADD unary_exp
  192          | POST_SUB unary_exp
  193          | unary_operator cast_exp
  194          | SIZEOF unary_exp
  195          | SIZEOF PARENTHESE_L type_name PARENTHESE_R

  196 unary_operator: AND_OP
  197               | MUL
  198               | ADD
  199               | SUB
  200               | NEG
  201               | NOT

  202 postfix_exp: primary_exp
  203            | postfix_exp BRACKET_L exp BRACKET_R
  204            | postfix_exp PARENTHESE_L argument_exp_list PARENTHESE_R
  205            | postfix_exp PARENTHESE_L PARENTHESE_R
  206            | postfix_exp DOT IDENTITY
  207            | postfix_exp PELEMENT IDENTITY
  208            | postfix_exp POST_ADD
  209            | postfix_exp POST_SUB

  210 primary_exp: IDENTITY
  211            | const_type
  212            | STRING
  213            | PARENTHESE_L exp PARENTHESE_R

  214 argument_exp_list: assignment_exp
  215                  | argument_exp_list COMMA assignment_exp

  216 const_type: INT_NUM
  217           | FLOAT_NUM
  218           | STRING


Terminals, with rules where they appear

$end (0) 0
error (256)
AUTO (258) 21
BREAK (259) 145
CASE (260) 120
CHAR (261) 27
COLON (262) 59 60 119 120 121 122 157
CONST (263) 38
CONTINUE (264) 144
DEFAULT (265) 121
DO (266) 134
DOUBLE (267) 32
ELLIPSIS (268) 85
ELSE (269) 131
ENUM (270) 61 62 63
EXTERN (271) 24
FLOAT (272) 31
FOR (273) 135 136 137 138 139 140 141 142
GOTO (274) 143
IF (275) 130 131
INT (276) 29
LONG (277) 30
REGISTER (278) 22
RETURN (279) 146 147
SHORT (280) 28
SIGNED (281) 33
SIZEOF (282) 194 195
STATIC (283) 23
STRUCT (284) 43
SWITCH (285) 132
TYPEDEF (286) 25
UNION (287) 44
UNSIGNED (288) 34
VOID (289) 26
VOLATILE (290) 39
WHILE (291) 133 134
INLINE (292)
RESTRICT (293)
_BOOL (294)
_COMPLEX (295)
_IMAGINARY (296)
_ALIGNAS (297)
_ALIGNOF (298)
_ATOMIC (299)
_STATIC_ASSERT (300)
_NORETURN (301)
_THREAD_LOCAL (302)
_GENERIC (303)
ADD (304) 182 198
SUB (305) 183 199
MUL (306) 78 79 80 81 185 197
DIV (307) 186
MOD (308) 187
NEG (309) 200
COMMA (310) 48 57 65 85 87 92 95 97 149 215
DOT (311) 206
SEMI (312) 10 11 51 122 123 134 135 136 137 138 139 140 141 142 143
    144 145 146 147
PARENTHESE_L (313) 72 75 76 77 103 130 131 132 133 134 135 136 137
    138 139 140 141 142 189 195 204 205 213
PARENTHESE_R (314) 72 75 76 77 103 130 131 132 133 134 135 136 137
    138 139 140 141 142 189 195 204 205 213
PELEMENT (315) 207
POST_ADD (316) 191 208
POST_SUB (317) 192 209
BRACKET_L (318) 73 74 104 105 106 107 203
BRACKET_R (319) 73 74 104 105 106 107 203
BRACE_L (320) 40 41 61 62 94 95 108 109 110 111 124 125 126 127
BRACE_R (321) 40 41 61 62 94 95 108 109 110 111 124 125 126 127
AND (322) 163
AND_OP (323) 169 196
OR (324) 161
OR_OP (325) 165
XOR_OP (326) 167
NOT (327) 201
EQUAL (328) 171
MOVE_L (329) 179
MOVE_R (330) 180
LESSER (331) 174
GREATER (332) 175
NOT_EQUAL (333) 172
LEQUAL (334) 176
GEQUAL (335) 177
ASSIGN (336) 50 67 152
QUES (337) 157
ASSIGN_OP (338) 153
ASSIGN_SHIFTL (339) 154
ASSIGN_SHIFTR (340) 155
IDENTITY (341) 40 42 61 63 66 67 71 91 92 112 119 143 206 207 210
INT_NUM (342) 216
FLOAT_NUM (343) 217
STRING (344) 212 218


Nonterminals, with rules where they appear

$accept (90)
    on left: 0
translation_unit (91)
    on left: 1 2, on right: 0 2
external_decl (92)
    on left: 3 4, on right: 1 2
function_definition (93)
    on left: 5 6 7 8 9, on right: 3
decl (94)
    on left: 10 11, on right: 4 12 13
decl_list (95)
    on left: 12 13, on right: 5 6 13 124 126
decl_specs (96)
    on left: 14 15 16 17 18 19 20, on right: 5 7 8 10 11 14 16 19 70
    88 89 90
storage_class_spec (97)
    on left: 21 22 23 24 25, on right: 14 15
type_spec (98)
    on left: 26 27 28 29 30 31 32 33 34 35 36 37, on right: 16 17 18
    52 53
type_qualifier (99)
    on left: 38 39, on right: 19 20 54 55 82 83
struct_or_union_spec (100)
    on left: 40 41 42, on right: 35
struct_or_union (101)
    on left: 43 44, on right: 40 41 42
struct_decl_list (102)
    on left: 45 46, on right: 40 41 46
init_declarator_list (103)
    on left: 47 48, on right: 10 48
init_declarator (104)
    on left: 49 50, on right: 47 48
struct_decl (105)
    on left: 51, on right: 45 46
spec_qualifier_list (106)
    on left: 52 53 54 55, on right: 51 52 54 98 99
struct_declarator_list (107)
    on left: 56 57, on right: 51 57
struct_declarator (108)
    on left: 58 59 60, on right: 56 57
enum_spec (109)
    on left: 61 62 63, on right: 36
enumerator_list (110)
    on left: 64 65, on right: 61 62 65
enumerator (111)
    on left: 66 67, on right: 64 65
declarator (112)
    on left: 68 69 70, on right: 5 6 7 8 9 49 50 58 59 72 88
direct_declarator (113)
    on left: 71 72 73 74 75 76 77, on right: 17 68 69 73 74 75 76 77
pointer (114)
    on left: 78 79 80 81, on right: 68 80 81 100 101
type_qualifier_list (115)
    on left: 82 83, on right: 78 80 83
param_type_list (116)
    on left: 84 85, on right: 75 108 109
param_list (117)
    on left: 86 87, on right: 84 85 87
param_decl (118)
    on left: 88 89 90, on right: 86 87
id_list (119)
    on left: 91 92, on right: 76 92
initializer (120)
    on left: 93 94 95, on right: 50 96 97
initializer_list (121)
    on left: 96 97, on right: 94 95 97
type_name (122)
    on left: 98 99, on right: 189 195
abstract_declarator (123)
    on left: 100 101 102, on right: 89 98 103
direct_abstract_declarator (124)
    on left: 103 104 105 106 107 108 109 110 111, on right: 101 102
    104 106 108 110
typedef_name (125)
    on left: 112, on right: 37
stat (126)
    on left: 113 114 115 116 117 118, on right: 119 120 121 128 129
    130 131 132 133 134 135 136 137 138 139 140 141 142
labeled_stat (127)
    on left: 119 120 121, on right: 113
exp_stat (128)
    on left: 122 123, on right: 114
compound_stat (129)
    on left: 124 125 126 127, on right: 5 6 7 9 115
stat_list (130)
    on left: 128 129, on right: 124 125 129
selection_stat (131)
    on left: 130 131 132, on right: 116
iteration_stat (132)
    on left: 133 134 135 136 137 138 139 140 141 142, on right: 117
jump_stat (133)
    on left: 143 144 145 146 147, on right: 118
exp (134)
    on left: 148 149, on right: 130 131 132 133 134 135 136 137 138
    139 140 141 146 149 157 203 213
assignment_exp (135)
    on left: 150 151, on right: 93 148 149 151 214 215
assignment_operator (136)
    on left: 152 153 154 155, on right: 151
conditional_exp (137)
    on left: 156 157, on right: 150 158
const_exp (138)
    on left: 158 159, on right: 59 60 67 73 104 105 120
logical_or_exp (139)
    on left: 160 161, on right: 156 157 161
logical_and_exp (140)
    on left: 162 163, on right: 160 161 163
inclusive_or_exp (141)
    on left: 164 165, on right: 162 163 165
exclusive_or_exp (142)
    on left: 166 167, on right: 164 165 167
and_exp (143)
    on left: 168 169, on right: 166 167 169
equality_exp (144)
    on left: 170 171 172, on right: 168 169 171 172
relational_exp (145)
    on left: 173 174 175 176 177, on right: 170 171 172 174 175 176
    177
shift_expression (146)
    on left: 178 179 180, on right: 173 174 175 176 177 179 180
additive_exp (147)
    on left: 181 182 183, on right: 178 179 180 182 183
mult_exp (148)
    on left: 184 185 186 187, on right: 181 182 183 185 186 187
cast_exp (149)
    on left: 188 189, on right: 184 185 186 187 189 193
unary_exp (150)
    on left: 190 191 192 193 194 195, on right: 151 188 191 192 194
unary_operator (151)
    on left: 196 197 198 199 200 201, on right: 193
postfix_exp (152)
    on left: 202 203 204 205 206 207 208 209, on right: 190 203 204
    205 206 207 208 209
primary_exp (153)
    on left: 210 211 212 213, on right: 159 202
argument_exp_list (154)
    on left: 214 215, on right: 204 215
const_type (155)
    on left: 216 217 218, on right: 211


State 0

    0 $accept: . translation_unit $end

    AUTO          shift, and go to state 1
    CHAR          shift, and go to state 2
    CONST         shift, and go to state 3
    DOUBLE        shift, and go to state 4
    ENUM          shift, and go to state 5
    EXTERN        shift, and go to state 6
    FLOAT         shift, and go to state 7
    INT           shift, and go to state 8
    LONG          shift, and go to state 9
    REGISTER      shift, and go to state 10
    SHORT         shift, and go to state 11
    SIGNED        shift, and go to state 12
    STATIC        shift, and go to state 13
    STRUCT        shift, and go to state 14
    TYPEDEF       shift, and go to state 15
    UNION         shift, and go to state 16
    UNSIGNED      shift, and go to state 17
    VOID          shift, and go to state 18
    VOLATILE      shift, and go to state 19
    MUL           shift, and go to state 20
    PARENTHESE_L  shift, and go to state 21
    IDENTITY      shift, and go to state 22

    translation_unit      go to state 23
    external_decl         go to state 24
    function_definition   go to state 25
    decl                  go to state 26
    decl_specs            go to state 27
    storage_class_spec    go to state 28
    type_spec             go to state 29
    type_qualifier        go to state 30
    struct_or_union_spec  go to state 31
    struct_or_union       go to state 32
    enum_spec             go to state 33
    declarator            go to state 34
    direct_declarator     go to state 35
    pointer               go to state 36
    typedef_name          go to state 37


State 1

   21 storage_class_spec: AUTO .

    $default  reduce using rule 21 (storage_class_spec)


State 2

   27 type_spec: CHAR .

    $default  reduce using rule 27 (type_spec)


State 3

   38 type_qualifier: CONST .

    $default  reduce using rule 38 (type_qualifier)


State 4

   32 type_spec: DOUBLE .

    $default  reduce using rule 32 (type_spec)


State 5

   61 enum_spec: ENUM . IDENTITY BRACE_L enumerator_list BRACE_R
   62          | ENUM . BRACE_L enumerator_list BRACE_R
   63          | ENUM . IDENTITY

    BRACE_L   shift, and go to state 38
    IDENTITY  shift, and go to state 39


State 6

   24 storage_class_spec: EXTERN .

    $default  reduce using rule 24 (storage_class_spec)


State 7

   31 type_spec: FLOAT .

    $default  reduce using rule 31 (type_spec)


State 8

   29 type_spec: INT .

    $default  reduce using rule 29 (type_spec)


State 9

   30 type_spec: LONG .

    $default  reduce using rule 30 (type_spec)


State 10

   22 storage_class_spec: REGISTER .

    $default  reduce using rule 22 (storage_class_spec)


State 11

   28 type_spec: SHORT .

    $default  reduce using rule 28 (type_spec)


State 12

   33 type_spec: SIGNED .

    $default  reduce using rule 33 (type_spec)


State 13

   23 storage_class_spec: STATIC .

    $default  reduce using rule 23 (storage_class_spec)


State 14

   43 struct_or_union: STRUCT .

    $default  reduce using rule 43 (struct_or_union)


State 15

   25 storage_class_spec: TYPEDEF .

    $default  reduce using rule 25 (storage_class_spec)


State 16

   44 struct_or_union: UNION .

    $default  reduce using rule 44 (struct_or_union)


State 17

   34 type_spec: UNSIGNED .

    $default  reduce using rule 34 (type_spec)


State 18

   26 type_spec: VOID .

    $default  reduce using rule 26 (type_spec)


State 19

   39 type_qualifier: VOLATILE .

    $default  reduce using rule 39 (type_qualifier)


State 20

   78 pointer: MUL . type_qualifier_list
   79        | MUL .
   80        | MUL . type_qualifier_list pointer
   81        | MUL . pointer

    CONST     shift, and go to state 3
    VOLATILE  shift, and go to state 19
    MUL       shift, and go to state 20

    $default  reduce using rule 79 (pointer)

    type_qualifier       go to state 40
    pointer              go to state 41
    type_qualifier_list  go to state 42


State 21

   72 direct_declarator: PARENTHESE_L . declarator PARENTHESE_R

    AUTO          shift, and go to state 1
    CHAR          shift, and go to state 2
    CONST         shift, and go to state 3
    DOUBLE        shift, and go to state 4
    ENUM          shift, and go to state 5
    EXTERN        shift, and go to state 6
    FLOAT         shift, and go to state 7
    INT           shift, and go to state 8
    LONG          shift, and go to state 9
    REGISTER      shift, and go to state 10
    SHORT         shift, and go to state 11
    SIGNED        shift, and go to state 12
    STATIC        shift, and go to state 13
    STRUCT        shift, and go to state 14
    TYPEDEF       shift, and go to state 15
    UNION         shift, and go to state 16
    UNSIGNED      shift, and go to state 17
    VOID          shift, and go to state 18
    VOLATILE      shift, and go to state 19
    MUL           shift, and go to state 20
    PARENTHESE_L  shift, and go to state 21
    IDENTITY      shift, and go to state 22

    decl_specs            go to state 43
    storage_class_spec    go to state 28
    type_spec             go to state 29
    type_qualifier        go to state 30
    struct_or_union_spec  go to state 31
    struct_or_union       go to state 32
    enum_spec             go to state 33
    declarator            go to state 44
    direct_declarator     go to state 35
    pointer               go to state 36
    typedef_name          go to state 37


State 22

   71 direct_declarator: IDENTITY .
  112 typedef_name: IDENTITY .

    $end          reduce using rule 71 (direct_declarator)
    $end          [reduce using rule 112 (typedef_name)]
    AUTO          reduce using rule 71 (direct_declarator)
    AUTO          [reduce using rule 112 (typedef_name)]
    CHAR          reduce using rule 71 (direct_declarator)
    CHAR          [reduce using rule 112 (typedef_name)]
    COLON         reduce using rule 71 (direct_declarator)
    COLON         [reduce using rule 112 (typedef_name)]
    CONST         reduce using rule 71 (direct_declarator)
    CONST         [reduce using rule 112 (typedef_name)]
    DOUBLE        reduce using rule 71 (direct_declarator)
    DOUBLE        [reduce using rule 112 (typedef_name)]
    ENUM          reduce using rule 71 (direct_declarator)
    ENUM          [reduce using rule 112 (typedef_name)]
    EXTERN        reduce using rule 71 (direct_declarator)
    EXTERN        [reduce using rule 112 (typedef_name)]
    FLOAT         reduce using rule 71 (direct_declarator)
    FLOAT         [reduce using rule 112 (typedef_name)]
    INT           reduce using rule 71 (direct_declarator)
    INT           [reduce using rule 112 (typedef_name)]
    LONG          reduce using rule 71 (direct_declarator)
    LONG          [reduce using rule 112 (typedef_name)]
    REGISTER      reduce using rule 71 (direct_declarator)
    REGISTER      [reduce using rule 112 (typedef_name)]
    SHORT         reduce using rule 71 (direct_declarator)
    SHORT         [reduce using rule 112 (typedef_name)]
    SIGNED        reduce using rule 71 (direct_declarator)
    SIGNED        [reduce using rule 112 (typedef_name)]
    STATIC        reduce using rule 71 (direct_declarator)
    STATIC        [reduce using rule 112 (typedef_name)]
    STRUCT        reduce using rule 71 (direct_declarator)
    STRUCT        [reduce using rule 112 (typedef_name)]
    TYPEDEF       reduce using rule 71 (direct_declarator)
    TYPEDEF       [reduce using rule 112 (typedef_name)]
    UNION         reduce using rule 71 (direct_declarator)
    UNION         [reduce using rule 112 (typedef_name)]
    UNSIGNED      reduce using rule 71 (direct_declarator)
    UNSIGNED      [reduce using rule 112 (typedef_name)]
    VOID          reduce using rule 71 (direct_declarator)
    VOID          [reduce using rule 112 (typedef_name)]
    VOLATILE      reduce using rule 71 (direct_declarator)
    VOLATILE      [reduce using rule 112 (typedef_name)]
    MUL           reduce using rule 71 (direct_declarator)
    MUL           [reduce using rule 112 (typedef_name)]
    COMMA         reduce using rule 71 (direct_declarator)
    COMMA         [reduce using rule 112 (typedef_name)]
    SEMI          reduce using rule 71 (direct_declarator)
    SEMI          [reduce using rule 112 (typedef_name)]
    PARENTHESE_L  reduce using rule 71 (direct_declarator)
    PARENTHESE_L  [reduce using rule 112 (typedef_name)]
    PARENTHESE_R  reduce using rule 71 (direct_declarator)
    PARENTHESE_R  [reduce using rule 112 (typedef_name)]
    BRACKET_L     reduce using rule 71 (direct_declarator)
    BRACKET_L     [reduce using rule 112 (typedef_name)]
    BRACE_L       reduce using rule 71 (direct_declarator)
    BRACE_L       [reduce using rule 112 (typedef_name)]
    BRACE_R       reduce using rule 71 (direct_declarator)
    BRACE_R       [reduce using rule 112 (typedef_name)]
    ASSIGN        reduce using rule 71 (direct_declarator)
    ASSIGN        [reduce using rule 112 (typedef_name)]
    IDENTITY      reduce using rule 71 (direct_declarator)
    IDENTITY      [reduce using rule 112 (typedef_name)]
    $default      reduce using rule 71 (direct_declarator)


State 23

    0 $accept: translation_unit . $end
    2 translation_unit: translation_unit . external_decl

    $end          shift, and go to state 45
    AUTO          shift, and go to state 1
    CHAR          shift, and go to state 2
    CONST         shift, and go to state 3
    DOUBLE        shift, and go to state 4
    ENUM          shift, and go to state 5
    EXTERN        shift, and go to state 6
    FLOAT         shift, and go to state 7
    INT           shift, and go to state 8
    LONG          shift, and go to state 9
    REGISTER      shift, and go to state 10
    SHORT         shift, and go to state 11
    SIGNED        shift, and go to state 12
    STATIC        shift, and go to state 13
    STRUCT        shift, and go to state 14
    TYPEDEF       shift, and go to state 15
    UNION         shift, and go to state 16
    UNSIGNED      shift, and go to state 17
    VOID          shift, and go to state 18
    VOLATILE      shift, and go to state 19
    MUL           shift, and go to state 20
    PARENTHESE_L  shift, and go to state 21
    IDENTITY      shift, and go to state 22

    external_decl         go to state 46
    function_definition   go to state 25
    decl                  go to state 26
    decl_specs            go to state 27
    storage_class_spec    go to state 28
    type_spec             go to state 29
    type_qualifier        go to state 30
    struct_or_union_spec  go to state 31
    struct_or_union       go to state 32
    enum_spec             go to state 33
    declarator            go to state 34
    direct_declarator     go to state 35
    pointer               go to state 36
    typedef_name          go to state 37


State 24

    1 translation_unit: external_decl .

    $default  reduce using rule 1 (translation_unit)


State 25

    3 external_decl: function_definition .

    $default  reduce using rule 3 (external_decl)


State 26

    4 external_decl: decl .

    $default  reduce using rule 4 (external_decl)


State 27

    5 function_definition: decl_specs . declarator decl_list compound_stat
    7                    | decl_specs . declarator compound_stat
    8                    | decl_specs . declarator
   10 decl: decl_specs . init_declarator_list SEMI
   11     | decl_specs . SEMI
   70 declarator: decl_specs .

    AUTO          shift, and go to state 1
    CHAR          shift, and go to state 2
    CONST         shift, and go to state 3
    DOUBLE        shift, and go to state 4
    ENUM          shift, and go to state 5
    EXTERN        shift, and go to state 6
    FLOAT         shift, and go to state 7
    INT           shift, and go to state 8
    LONG          shift, and go to state 9
    REGISTER      shift, and go to state 10
    SHORT         shift, and go to state 11
    SIGNED        shift, and go to state 12
    STATIC        shift, and go to state 13
    STRUCT        shift, and go to state 14
    TYPEDEF       shift, and go to state 15
    UNION         shift, and go to state 16
    UNSIGNED      shift, and go to state 17
    VOID          shift, and go to state 18
    VOLATILE      shift, and go to state 19
    MUL           shift, and go to state 20
    SEMI          shift, and go to state 47
    PARENTHESE_L  shift, and go to state 21
    IDENTITY      shift, and go to state 22

    AUTO      [reduce using rule 70 (declarator)]
    CHAR      [reduce using rule 70 (declarator)]
    CONST     [reduce using rule 70 (declarator)]
    DOUBLE    [reduce using rule 70 (declarator)]
    ENUM      [reduce using rule 70 (declarator)]
    EXTERN    [reduce using rule 70 (declarator)]
    FLOAT     [reduce using rule 70 (declarator)]
    INT       [reduce using rule 70 (declarator)]
    LONG      [reduce using rule 70 (declarator)]
    REGISTER  [reduce using rule 70 (declarator)]
    SHORT     [reduce using rule 70 (declarator)]
    SIGNED    [reduce using rule 70 (declarator)]
    STATIC    [reduce using rule 70 (declarator)]
    STRUCT    [reduce using rule 70 (declarator)]
    TYPEDEF   [reduce using rule 70 (declarator)]
    UNION     [reduce using rule 70 (declarator)]
    UNSIGNED  [reduce using rule 70 (declarator)]
    VOID      [reduce using rule 70 (declarator)]
    VOLATILE  [reduce using rule 70 (declarator)]
    IDENTITY  [reduce using rule 70 (declarator)]
    $default  reduce using rule 70 (declarator)

    decl_specs            go to state 43
    storage_class_spec    go to state 28
    type_spec             go to state 29
    type_qualifier        go to state 30
    struct_or_union_spec  go to state 31
    struct_or_union       go to state 32
    init_declarator_list  go to state 48
    init_declarator       go to state 49
    enum_spec             go to state 33
    declarator            go to state 50
    direct_declarator     go to state 35
    pointer               go to state 36
    typedef_name          go to state 37


State 28

   14 decl_specs: storage_class_spec . decl_specs
   15           | storage_class_spec .

    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    REGISTER  shift, and go to state 10
    SHORT     shift, and go to state 11
    SIGNED    shift, and go to state 12
    STATIC    shift, and go to state 13
    STRUCT    shift, and go to state 14
    TYPEDEF   shift, and go to state 15
    UNION     shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    VOID      shift, and go to state 18
    VOLATILE  shift, and go to state 19
    IDENTITY  shift, and go to state 51

    AUTO      [reduce using rule 15 (decl_specs)]
    CHAR      [reduce using rule 15 (decl_specs)]
    CONST     [reduce using rule 15 (decl_specs)]
    DOUBLE    [reduce using rule 15 (decl_specs)]
    ENUM      [reduce using rule 15 (decl_specs)]
    EXTERN    [reduce using rule 15 (decl_specs)]
    FLOAT     [reduce using rule 15 (decl_specs)]
    INT       [reduce using rule 15 (decl_specs)]
    LONG      [reduce using rule 15 (decl_specs)]
    REGISTER  [reduce using rule 15 (decl_specs)]
    SHORT     [reduce using rule 15 (decl_specs)]
    SIGNED    [reduce using rule 15 (decl_specs)]
    STATIC    [reduce using rule 15 (decl_specs)]
    STRUCT    [reduce using rule 15 (decl_specs)]
    TYPEDEF   [reduce using rule 15 (decl_specs)]
    UNION     [reduce using rule 15 (decl_specs)]
    UNSIGNED  [reduce using rule 15 (decl_specs)]
    VOID      [reduce using rule 15 (decl_specs)]
    VOLATILE  [reduce using rule 15 (decl_specs)]
    IDENTITY  [reduce using rule 15 (decl_specs)]
    $default  reduce using rule 15 (decl_specs)

    decl_specs            go to state 52
    storage_class_spec    go to state 28
    type_spec             go to state 29
    type_qualifier        go to state 30
    struct_or_union_spec  go to state 31
    struct_or_union       go to state 32
    enum_spec             go to state 33
    typedef_name          go to state 37


State 29

   16 decl_specs: type_spec . decl_specs
   17           | type_spec . direct_declarator
   18           | type_spec .

    AUTO          shift, and go to state 1
    CHAR          shift, and go to state 2
    CONST         shift, and go to state 3
    DOUBLE        shift, and go to state 4
    ENUM          shift, and go to state 5
    EXTERN        shift, and go to state 6
    FLOAT         shift, and go to state 7
    INT           shift, and go to state 8
    LONG          shift, and go to state 9
    REGISTER      shift, and go to state 10
    SHORT         shift, and go to state 11
    SIGNED        shift, and go to state 12
    STATIC        shift, and go to state 13
    STRUCT        shift, and go to state 14
    TYPEDEF       shift, and go to state 15
    UNION         shift, and go to state 16
    UNSIGNED      shift, and go to state 17
    VOID          shift, and go to state 18
    VOLATILE      shift, and go to state 19
    PARENTHESE_L  shift, and go to state 21
    IDENTITY      shift, and go to state 22

    AUTO          [reduce using rule 18 (decl_specs)]
    CHAR          [reduce using rule 18 (decl_specs)]
    CONST         [reduce using rule 18 (decl_specs)]
    DOUBLE        [reduce using rule 18 (decl_specs)]
    ENUM          [reduce using rule 18 (decl_specs)]
    EXTERN        [reduce using rule 18 (decl_specs)]
    FLOAT         [reduce using rule 18 (decl_specs)]
    INT           [reduce using rule 18 (decl_specs)]
    LONG          [reduce using rule 18 (decl_specs)]
    REGISTER      [reduce using rule 18 (decl_specs)]
    SHORT         [reduce using rule 18 (decl_specs)]
    SIGNED        [reduce using rule 18 (decl_specs)]
    STATIC        [reduce using rule 18 (decl_specs)]
    STRUCT        [reduce using rule 18 (decl_specs)]
    TYPEDEF       [reduce using rule 18 (decl_specs)]
    UNION         [reduce using rule 18 (decl_specs)]
    UNSIGNED      [reduce using rule 18 (decl_specs)]
    VOID          [reduce using rule 18 (decl_specs)]
    VOLATILE      [reduce using rule 18 (decl_specs)]
    PARENTHESE_L  [reduce using rule 18 (decl_specs)]
    IDENTITY      [reduce using rule 18 (decl_specs)]
    $default      reduce using rule 18 (decl_specs)

    decl_specs            go to state 53
    storage_class_spec    go to state 28
    type_spec             go to state 29
    type_qualifier        go to state 30
    struct_or_union_spec  go to state 31
    struct_or_union       go to state 32
    enum_spec             go to state 33
    direct_declarator     go to state 54
    typedef_name          go to state 37


State 30

   19 decl_specs: type_qualifier . decl_specs
   20           | type_qualifier .

    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    REGISTER  shift, and go to state 10
    SHORT     shift, and go to state 11
    SIGNED    shift, and go to state 12
    STATIC    shift, and go to state 13
    STRUCT    shift, and go to state 14
    TYPEDEF   shift, and go to state 15
    UNION     shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    VOID      shift, and go to state 18
    VOLATILE  shift, and go to state 19
    IDENTITY  shift, and go to state 51

    AUTO      [reduce using rule 20 (decl_specs)]
    CHAR      [reduce using rule 20 (decl_specs)]
    CONST     [reduce using rule 20 (decl_specs)]
    DOUBLE    [reduce using rule 20 (decl_specs)]
    ENUM      [reduce using rule 20 (decl_specs)]
    EXTERN    [reduce using rule 20 (decl_specs)]
    FLOAT     [reduce using rule 20 (decl_specs)]
    INT       [reduce using rule 20 (decl_specs)]
    LONG      [reduce using rule 20 (decl_specs)]
    REGISTER  [reduce using rule 20 (decl_specs)]
    SHORT     [reduce using rule 20 (decl_specs)]
    SIGNED    [reduce using rule 20 (decl_specs)]
    STATIC    [reduce using rule 20 (decl_specs)]
    STRUCT    [reduce using rule 20 (decl_specs)]
    TYPEDEF   [reduce using rule 20 (decl_specs)]
    UNION     [reduce using rule 20 (decl_specs)]
    UNSIGNED  [reduce using rule 20 (decl_specs)]
    VOID      [reduce using rule 20 (decl_specs)]
    VOLATILE  [reduce using rule 20 (decl_specs)]
    IDENTITY  [reduce using rule 20 (decl_specs)]
    $default  reduce using rule 20 (decl_specs)

    decl_specs            go to state 55
    storage_class_spec    go to state 28
    type_spec             go to state 29
    type_qualifier        go to state 30
    struct_or_union_spec  go to state 31
    struct_or_union       go to state 32
    enum_spec             go to state 33
    typedef_name          go to state 37


State 31

   35 type_spec: struct_or_union_spec .

    $default  reduce using rule 35 (type_spec)


State 32

   40 struct_or_union_spec: struct_or_union . IDENTITY BRACE_L struct_decl_list BRACE_R
   41                     | struct_or_union . BRACE_L struct_decl_list BRACE_R
   42                     | struct_or_union . IDENTITY

    BRACE_L   shift, and go to state 56
    IDENTITY  shift, and go to state 57


State 33

   36 type_spec: enum_spec .

    $default  reduce using rule 36 (type_spec)


State 34

    6 function_definition: declarator . decl_list compound_stat
    9                    | declarator . compound_stat

    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    REGISTER  shift, and go to state 10
    SHORT     shift, and go to state 11
    SIGNED    shift, and go to state 12
    STATIC    shift, and go to state 13
    STRUCT    shift, and go to state 14
    TYPEDEF   shift, and go to state 15
    UNION     shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    VOID      shift, and go to state 18
    VOLATILE  shift, and go to state 19
    BRACE_L   shift, and go to state 58
    IDENTITY  shift, and go to state 51

    decl                  go to state 59
    decl_list             go to state 60
    decl_specs            go to state 61
    storage_class_spec    go to state 28
    type_spec             go to state 29
    type_qualifier        go to state 30
    struct_or_union_spec  go to state 31
    struct_or_union       go to state 32
    enum_spec             go to state 33
    typedef_name          go to state 37
    compound_stat         go to state 62


State 35

   69 declarator: direct_declarator .
   73 direct_declarator: direct_declarator . BRACKET_L const_exp BRACKET_R
   74                  | direct_declarator . BRACKET_L BRACKET_R
   75                  | direct_declarator . PARENTHESE_L param_type_list PARENTHESE_R
   76                  | direct_declarator . PARENTHESE_L id_list PARENTHESE_R
   77                  | direct_declarator . PARENTHESE_L PARENTHESE_R

    PARENTHESE_L  shift, and go to state 63
    BRACKET_L     shift, and go to state 64

    PARENTHESE_L  [reduce using rule 69 (declarator)]
    $default      reduce using rule 69 (declarator)


State 36

   68 declarator: pointer . direct_declarator

    PARENTHESE_L  shift, and go to state 21
    IDENTITY      shift, and go to state 65

    direct_declarator  go to state 66


State 37

   37 type_spec: typedef_name .

    $default  reduce using rule 37 (type_spec)


State 38

   62 enum_spec: ENUM BRACE_L . enumerator_list BRACE_R

    IDENTITY  shift, and go to state 67

    enumerator_list  go to state 68
    enumerator       go to state 69


State 39

   61 enum_spec: ENUM IDENTITY . BRACE_L enumerator_list BRACE_R
   63          | ENUM IDENTITY .

    BRACE_L  shift, and go to state 70

    BRACE_L   [reduce using rule 63 (enum_spec)]
    $default  reduce using rule 63 (enum_spec)


State 40

   82 type_qualifier_list: type_qualifier .

    $default  reduce using rule 82 (type_qualifier_list)


State 41

   81 pointer: MUL pointer .

    $default  reduce using rule 81 (pointer)


State 42

   78 pointer: MUL type_qualifier_list .
   80        | MUL type_qualifier_list . pointer
   83 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST     shift, and go to state 3
    VOLATILE  shift, and go to state 19
    MUL       shift, and go to state 20

    $default  reduce using rule 78 (pointer)

    type_qualifier  go to state 71
    pointer         go to state 72


State 43

   70 declarator: decl_specs .

    $default  reduce using rule 70 (declarator)


State 44

   72 direct_declarator: PARENTHESE_L declarator . PARENTHESE_R

    PARENTHESE_R  shift, and go to state 73


State 45

    0 $accept: translation_unit $end .

    $default  accept


State 46

    2 translation_unit: translation_unit external_decl .

    $default  reduce using rule 2 (translation_unit)


State 47

   11 decl: decl_specs SEMI .

    $default  reduce using rule 11 (decl)


State 48

   10 decl: decl_specs init_declarator_list . SEMI
   48 init_declarator_list: init_declarator_list . COMMA init_declarator

    COMMA  shift, and go to state 74
    SEMI   shift, and go to state 75


State 49

   47 init_declarator_list: init_declarator .

    $default  reduce using rule 47 (init_declarator_list)


State 50

    5 function_definition: decl_specs declarator . decl_list compound_stat
    7                    | decl_specs declarator . compound_stat
    8                    | decl_specs declarator .
   49 init_declarator: declarator .
   50                | declarator . ASSIGN initializer

    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    REGISTER  shift, and go to state 10
    SHORT     shift, and go to state 11
    SIGNED    shift, and go to state 12
    STATIC    shift, and go to state 13
    STRUCT    shift, and go to state 14
    TYPEDEF   shift, and go to state 15
    UNION     shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    VOID      shift, and go to state 18
    VOLATILE  shift, and go to state 19
    BRACE_L   shift, and go to state 58
    ASSIGN    shift, and go to state 76
    IDENTITY  shift, and go to state 51

    AUTO      [reduce using rule 8 (function_definition)]
    CHAR      [reduce using rule 8 (function_definition)]
    CONST     [reduce using rule 8 (function_definition)]
    DOUBLE    [reduce using rule 8 (function_definition)]
    ENUM      [reduce using rule 8 (function_definition)]
    EXTERN    [reduce using rule 8 (function_definition)]
    FLOAT     [reduce using rule 8 (function_definition)]
    INT       [reduce using rule 8 (function_definition)]
    LONG      [reduce using rule 8 (function_definition)]
    REGISTER  [reduce using rule 8 (function_definition)]
    SHORT     [reduce using rule 8 (function_definition)]
    SIGNED    [reduce using rule 8 (function_definition)]
    STATIC    [reduce using rule 8 (function_definition)]
    STRUCT    [reduce using rule 8 (function_definition)]
    TYPEDEF   [reduce using rule 8 (function_definition)]
    UNION     [reduce using rule 8 (function_definition)]
    UNSIGNED  [reduce using rule 8 (function_definition)]
    VOID      [reduce using rule 8 (function_definition)]
    VOLATILE  [reduce using rule 8 (function_definition)]
    COMMA     reduce using rule 49 (init_declarator)
    SEMI      reduce using rule 49 (init_declarator)
    IDENTITY  [reduce using rule 8 (function_definition)]
    $default  reduce using rule 8 (function_definition)

    decl                  go to state 59
    decl_list             go to state 77
    decl_specs            go to state 61
    storage_class_spec    go to state 28
    type_spec             go to state 29
    type_qualifier        go to state 30
    struct_or_union_spec  go to state 31
    struct_or_union       go to state 32
    enum_spec             go to state 33
    typedef_name          go to state 37
    compound_stat         go to state 78


State 51

  112 typedef_name: IDENTITY .

    $default  reduce using rule 112 (typedef_name)


State 52

   14 decl_specs: storage_class_spec decl_specs .

    $default  reduce using rule 14 (decl_specs)


State 53

   16 decl_specs: type_spec decl_specs .

    $default  reduce using rule 16 (decl_specs)


State 54

   17 decl_specs: type_spec direct_declarator .
   73 direct_declarator: direct_declarator . BRACKET_L const_exp BRACKET_R
   74                  | direct_declarator . BRACKET_L BRACKET_R
   75                  | direct_declarator . PARENTHESE_L param_type_list PARENTHESE_R
   76                  | direct_declarator . PARENTHESE_L id_list PARENTHESE_R
   77                  | direct_declarator . PARENTHESE_L PARENTHESE_R

    PARENTHESE_L  shift, and go to state 63
    BRACKET_L     shift, and go to state 64

    PARENTHESE_L  [reduce using rule 17 (decl_specs)]
    BRACKET_L     [reduce using rule 17 (decl_specs)]
    $default      reduce using rule 17 (decl_specs)


State 55

   19 decl_specs: type_qualifier decl_specs .

    $default  reduce using rule 19 (decl_specs)


State 56

   41 struct_or_union_spec: struct_or_union BRACE_L . struct_decl_list BRACE_R

    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    FLOAT     shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    SHORT     shift, and go to state 11
    SIGNED    shift, and go to state 12
    STRUCT    shift, and go to state 14
    UNION     shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    VOID      shift, and go to state 18
    VOLATILE  shift, and go to state 19
    IDENTITY  shift, and go to state 51

    type_spec             go to state 79
    type_qualifier        go to state 80
    struct_or_union_spec  go to state 31
    struct_or_union       go to state 32
    struct_decl_list      go to state 81
    struct_decl           go to state 82
    spec_qualifier_list   go to state 83
    enum_spec             go to state 33
    typedef_name          go to state 37


State 57

   40 struct_or_union_spec: struct_or_union IDENTITY . BRACE_L struct_decl_list BRACE_R
   42                     | struct_or_union IDENTITY .

    BRACE_L  shift, and go to state 84

    BRACE_L   [reduce using rule 42 (struct_or_union_spec)]
    $default  reduce using rule 42 (struct_or_union_spec)


State 58

  124 compound_stat: BRACE_L . decl_list stat_list BRACE_R
  125              | BRACE_L . stat_list BRACE_R
  126              | BRACE_L . decl_list BRACE_R
  127              | BRACE_L . BRACE_R

    AUTO      shift, and go to state 1
    BREAK     shift, and go to state 85
    CASE      shift, and go to state 86
    CHAR      shift, and go to state 2
    COLON     shift, and go to state 87
    CONST     shift, and go to state 3
    CONTINUE  shift, and go to state 88
    DEFAULT   shift, and go to state 89
    DO        shift, and go to state 90
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    FOR       shift, and go to state 91
    GOTO      shift, and go to state 92
    IF        shift, and go to state 93
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    REGISTER  shift, and go to state 10
    RETURN    shift, and go to state 94
    SHORT     shift, and go to state 11
    SIGNED    shift, and go to state 12
    STATIC    shift, and go to state 13
    STRUCT    shift, and go to state 14
    SWITCH    shift, and go to state 95
    TYPEDEF   shift, and go to state 15
    UNION     shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    VOID      shift, and go to state 18
    VOLATILE  shift, and go to state 19
    WHILE     shift, and go to state 96
    SEMI      shift, and go to state 97
    BRACE_L   shift, and go to state 58
    BRACE_R   shift, and go to state 98
    IDENTITY  shift, and go to state 99

    decl                  go to state 59
    decl_list             go to state 100
    decl_specs            go to state 61
    storage_class_spec    go to state 28
    type_spec             go to state 29
    type_qualifier        go to state 30
    struct_or_union_spec  go to state 31
    struct_or_union       go to state 32
    enum_spec             go to state 33
    typedef_name          go to state 37
    stat                  go to state 101
    labeled_stat          go to state 102
    exp_stat              go to state 103
    compound_stat         go to state 104
    stat_list             go to state 105
    selection_stat        go to state 106
    iteration_stat        go to state 107
    jump_stat             go to state 108


State 59

   12 decl_list: decl .

    $default  reduce using rule 12 (decl_list)


State 60

    6 function_definition: declarator decl_list . compound_stat
   13 decl_list: decl_list . decl

    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    REGISTER  shift, and go to state 10
    SHORT     shift, and go to state 11
    SIGNED    shift, and go to state 12
    STATIC    shift, and go to state 13
    STRUCT    shift, and go to state 14
    TYPEDEF   shift, and go to state 15
    UNION     shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    VOID      shift, and go to state 18
    VOLATILE  shift, and go to state 19
    BRACE_L   shift, and go to state 58
    IDENTITY  shift, and go to state 51

    decl                  go to state 109
    decl_specs            go to state 61
    storage_class_spec    go to state 28
    type_spec             go to state 29
    type_qualifier        go to state 30
    struct_or_union_spec  go to state 31
    struct_or_union       go to state 32
    enum_spec             go to state 33
    typedef_name          go to state 37
    compound_stat         go to state 110


State 61

   10 decl: decl_specs . init_declarator_list SEMI
   11     | decl_specs . SEMI

    AUTO          shift, and go to state 1
    CHAR          shift, and go to state 2
    CONST         shift, and go to state 3
    DOUBLE        shift, and go to state 4
    ENUM          shift, and go to state 5
    EXTERN        shift, and go to state 6
    FLOAT         shift, and go to state 7
    INT           shift, and go to state 8
    LONG          shift, and go to state 9
    REGISTER      shift, and go to state 10
    SHORT         shift, and go to state 11
    SIGNED        shift, and go to state 12
    STATIC        shift, and go to state 13
    STRUCT        shift, and go to state 14
    TYPEDEF       shift, and go to state 15
    UNION         shift, and go to state 16
    UNSIGNED      shift, and go to state 17
    VOID          shift, and go to state 18
    VOLATILE      shift, and go to state 19
    MUL           shift, and go to state 20
    SEMI          shift, and go to state 47
    PARENTHESE_L  shift, and go to state 21
    IDENTITY      shift, and go to state 22

    decl_specs            go to state 43
    storage_class_spec    go to state 28
    type_spec             go to state 29
    type_qualifier        go to state 30
    struct_or_union_spec  go to state 31
    struct_or_union       go to state 32
    init_declarator_list  go to state 48
    init_declarator       go to state 49
    enum_spec             go to state 33
    declarator            go to state 111
    direct_declarator     go to state 35
    pointer               go to state 36
    typedef_name          go to state 37


State 62

    9 function_definition: declarator compound_stat .

    $default  reduce using rule 9 (function_definition)


State 63

   75 direct_declarator: direct_declarator PARENTHESE_L . param_type_list PARENTHESE_R
   76                  | direct_declarator PARENTHESE_L . id_list PARENTHESE_R
   77                  | direct_declarator PARENTHESE_L . PARENTHESE_R

    AUTO          shift, and go to state 1
    CHAR          shift, and go to state 2
    CONST         shift, and go to state 3
    DOUBLE        shift, and go to state 4
    ENUM          shift, and go to state 5
    EXTERN        shift, and go to state 6
    FLOAT         shift, and go to state 7
    INT           shift, and go to state 8
    LONG          shift, and go to state 9
    REGISTER      shift, and go to state 10
    SHORT         shift, and go to state 11
    SIGNED        shift, and go to state 12
    STATIC        shift, and go to state 13
    STRUCT        shift, and go to state 14
    TYPEDEF       shift, and go to state 15
    UNION         shift, and go to state 16
    UNSIGNED      shift, and go to state 17
    VOID          shift, and go to state 18
    VOLATILE      shift, and go to state 19
    PARENTHESE_R  shift, and go to state 112
    IDENTITY      shift, and go to state 113

    decl_specs            go to state 114
    storage_class_spec    go to state 28
    type_spec             go to state 29
    type_qualifier        go to state 30
    struct_or_union_spec  go to state 31
    struct_or_union       go to state 32
    enum_spec             go to state 33
    param_type_list       go to state 115
    param_list            go to state 116
    param_decl            go to state 117
    id_list               go to state 118
    typedef_name          go to state 37


State 64

   73 direct_declarator: direct_declarator BRACKET_L . const_exp BRACKET_R
   74                  | direct_declarator BRACKET_L . BRACKET_R

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    PARENTHESE_L  shift, and go to state 124
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    BRACKET_R     shift, and go to state 127
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    conditional_exp   go to state 134
    const_exp         go to state 135
    logical_or_exp    go to state 136
    logical_and_exp   go to state 137
    inclusive_or_exp  go to state 138
    exclusive_or_exp  go to state 139
    and_exp           go to state 140
    equality_exp      go to state 141
    relational_exp    go to state 142
    shift_expression  go to state 143
    additive_exp      go to state 144
    mult_exp          go to state 145
    cast_exp          go to state 146
    unary_exp         go to state 147
    unary_operator    go to state 148
    postfix_exp       go to state 149
    primary_exp       go to state 150
    const_type        go to state 151


State 65

   71 direct_declarator: IDENTITY .

    $default  reduce using rule 71 (direct_declarator)


State 66

   68 declarator: pointer direct_declarator .
   73 direct_declarator: direct_declarator . BRACKET_L const_exp BRACKET_R
   74                  | direct_declarator . BRACKET_L BRACKET_R
   75                  | direct_declarator . PARENTHESE_L param_type_list PARENTHESE_R
   76                  | direct_declarator . PARENTHESE_L id_list PARENTHESE_R
   77                  | direct_declarator . PARENTHESE_L PARENTHESE_R

    PARENTHESE_L  shift, and go to state 63
    BRACKET_L     shift, and go to state 64

    PARENTHESE_L  [reduce using rule 68 (declarator)]
    $default      reduce using rule 68 (declarator)


State 67

   66 enumerator: IDENTITY .
   67           | IDENTITY . ASSIGN const_exp

    ASSIGN  shift, and go to state 152

    $default  reduce using rule 66 (enumerator)


State 68

   62 enum_spec: ENUM BRACE_L enumerator_list . BRACE_R
   65 enumerator_list: enumerator_list . COMMA enumerator

    COMMA    shift, and go to state 153
    BRACE_R  shift, and go to state 154


State 69

   64 enumerator_list: enumerator .

    $default  reduce using rule 64 (enumerator_list)


State 70

   61 enum_spec: ENUM IDENTITY BRACE_L . enumerator_list BRACE_R

    IDENTITY  shift, and go to state 67

    enumerator_list  go to state 155
    enumerator       go to state 69


State 71

   83 type_qualifier_list: type_qualifier_list type_qualifier .

    $default  reduce using rule 83 (type_qualifier_list)


State 72

   80 pointer: MUL type_qualifier_list pointer .

    $default  reduce using rule 80 (pointer)


State 73

   72 direct_declarator: PARENTHESE_L declarator PARENTHESE_R .

    $default  reduce using rule 72 (direct_declarator)


State 74

   48 init_declarator_list: init_declarator_list COMMA . init_declarator

    AUTO          shift, and go to state 1
    CHAR          shift, and go to state 2
    CONST         shift, and go to state 3
    DOUBLE        shift, and go to state 4
    ENUM          shift, and go to state 5
    EXTERN        shift, and go to state 6
    FLOAT         shift, and go to state 7
    INT           shift, and go to state 8
    LONG          shift, and go to state 9
    REGISTER      shift, and go to state 10
    SHORT         shift, and go to state 11
    SIGNED        shift, and go to state 12
    STATIC        shift, and go to state 13
    STRUCT        shift, and go to state 14
    TYPEDEF       shift, and go to state 15
    UNION         shift, and go to state 16
    UNSIGNED      shift, and go to state 17
    VOID          shift, and go to state 18
    VOLATILE      shift, and go to state 19
    MUL           shift, and go to state 20
    PARENTHESE_L  shift, and go to state 21
    IDENTITY      shift, and go to state 22

    decl_specs            go to state 43
    storage_class_spec    go to state 28
    type_spec             go to state 29
    type_qualifier        go to state 30
    struct_or_union_spec  go to state 31
    struct_or_union       go to state 32
    init_declarator       go to state 156
    enum_spec             go to state 33
    declarator            go to state 111
    direct_declarator     go to state 35
    pointer               go to state 36
    typedef_name          go to state 37


State 75

   10 decl: decl_specs init_declarator_list SEMI .

    $default  reduce using rule 10 (decl)


State 76

   50 init_declarator: declarator ASSIGN . initializer

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    PARENTHESE_L  shift, and go to state 124
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    BRACE_L       shift, and go to state 157
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    initializer       go to state 158
    assignment_exp    go to state 159
    conditional_exp   go to state 160
    logical_or_exp    go to state 136
    logical_and_exp   go to state 137
    inclusive_or_exp  go to state 138
    exclusive_or_exp  go to state 139
    and_exp           go to state 140
    equality_exp      go to state 141
    relational_exp    go to state 142
    shift_expression  go to state 143
    additive_exp      go to state 144
    mult_exp          go to state 145
    cast_exp          go to state 146
    unary_exp         go to state 161
    unary_operator    go to state 148
    postfix_exp       go to state 149
    primary_exp       go to state 162
    const_type        go to state 151


State 77

    5 function_definition: decl_specs declarator decl_list . compound_stat
   13 decl_list: decl_list . decl

    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    REGISTER  shift, and go to state 10
    SHORT     shift, and go to state 11
    SIGNED    shift, and go to state 12
    STATIC    shift, and go to state 13
    STRUCT    shift, and go to state 14
    TYPEDEF   shift, and go to state 15
    UNION     shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    VOID      shift, and go to state 18
    VOLATILE  shift, and go to state 19
    BRACE_L   shift, and go to state 58
    IDENTITY  shift, and go to state 51

    decl                  go to state 109
    decl_specs            go to state 61
    storage_class_spec    go to state 28
    type_spec             go to state 29
    type_qualifier        go to state 30
    struct_or_union_spec  go to state 31
    struct_or_union       go to state 32
    enum_spec             go to state 33
    typedef_name          go to state 37
    compound_stat         go to state 163


State 78

    7 function_definition: decl_specs declarator compound_stat .

    $default  reduce using rule 7 (function_definition)


State 79

   52 spec_qualifier_list: type_spec . spec_qualifier_list
   53                    | type_spec .

    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    FLOAT     shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    SHORT     shift, and go to state 11
    SIGNED    shift, and go to state 12
    STRUCT    shift, and go to state 14
    UNION     shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    VOID      shift, and go to state 18
    VOLATILE  shift, and go to state 19
    IDENTITY  shift, and go to state 51

    CHAR      [reduce using rule 53 (spec_qualifier_list)]
    CONST     [reduce using rule 53 (spec_qualifier_list)]
    DOUBLE    [reduce using rule 53 (spec_qualifier_list)]
    ENUM      [reduce using rule 53 (spec_qualifier_list)]
    FLOAT     [reduce using rule 53 (spec_qualifier_list)]
    INT       [reduce using rule 53 (spec_qualifier_list)]
    LONG      [reduce using rule 53 (spec_qualifier_list)]
    SHORT     [reduce using rule 53 (spec_qualifier_list)]
    SIGNED    [reduce using rule 53 (spec_qualifier_list)]
    STRUCT    [reduce using rule 53 (spec_qualifier_list)]
    UNION     [reduce using rule 53 (spec_qualifier_list)]
    UNSIGNED  [reduce using rule 53 (spec_qualifier_list)]
    VOID      [reduce using rule 53 (spec_qualifier_list)]
    VOLATILE  [reduce using rule 53 (spec_qualifier_list)]
    IDENTITY  [reduce using rule 53 (spec_qualifier_list)]
    $default  reduce using rule 53 (spec_qualifier_list)

    type_spec             go to state 79
    type_qualifier        go to state 80
    struct_or_union_spec  go to state 31
    struct_or_union       go to state 32
    spec_qualifier_list   go to state 164
    enum_spec             go to state 33
    typedef_name          go to state 37


State 80

   54 spec_qualifier_list: type_qualifier . spec_qualifier_list
   55                    | type_qualifier .

    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    FLOAT     shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    SHORT     shift, and go to state 11
    SIGNED    shift, and go to state 12
    STRUCT    shift, and go to state 14
    UNION     shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    VOID      shift, and go to state 18
    VOLATILE  shift, and go to state 19
    IDENTITY  shift, and go to state 51

    CHAR      [reduce using rule 55 (spec_qualifier_list)]
    CONST     [reduce using rule 55 (spec_qualifier_list)]
    DOUBLE    [reduce using rule 55 (spec_qualifier_list)]
    ENUM      [reduce using rule 55 (spec_qualifier_list)]
    FLOAT     [reduce using rule 55 (spec_qualifier_list)]
    INT       [reduce using rule 55 (spec_qualifier_list)]
    LONG      [reduce using rule 55 (spec_qualifier_list)]
    SHORT     [reduce using rule 55 (spec_qualifier_list)]
    SIGNED    [reduce using rule 55 (spec_qualifier_list)]
    STRUCT    [reduce using rule 55 (spec_qualifier_list)]
    UNION     [reduce using rule 55 (spec_qualifier_list)]
    UNSIGNED  [reduce using rule 55 (spec_qualifier_list)]
    VOID      [reduce using rule 55 (spec_qualifier_list)]
    VOLATILE  [reduce using rule 55 (spec_qualifier_list)]
    IDENTITY  [reduce using rule 55 (spec_qualifier_list)]
    $default  reduce using rule 55 (spec_qualifier_list)

    type_spec             go to state 79
    type_qualifier        go to state 80
    struct_or_union_spec  go to state 31
    struct_or_union       go to state 32
    spec_qualifier_list   go to state 165
    enum_spec             go to state 33
    typedef_name          go to state 37


State 81

   41 struct_or_union_spec: struct_or_union BRACE_L struct_decl_list . BRACE_R
   46 struct_decl_list: struct_decl_list . struct_decl

    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    FLOAT     shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    SHORT     shift, and go to state 11
    SIGNED    shift, and go to state 12
    STRUCT    shift, and go to state 14
    UNION     shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    VOID      shift, and go to state 18
    VOLATILE  shift, and go to state 19
    BRACE_R   shift, and go to state 166
    IDENTITY  shift, and go to state 51

    type_spec             go to state 79
    type_qualifier        go to state 80
    struct_or_union_spec  go to state 31
    struct_or_union       go to state 32
    struct_decl           go to state 167
    spec_qualifier_list   go to state 83
    enum_spec             go to state 33
    typedef_name          go to state 37


State 82

   45 struct_decl_list: struct_decl .

    $default  reduce using rule 45 (struct_decl_list)


State 83

   51 struct_decl: spec_qualifier_list . struct_declarator_list SEMI

    AUTO          shift, and go to state 1
    CHAR          shift, and go to state 2
    COLON         shift, and go to state 168
    CONST         shift, and go to state 3
    DOUBLE        shift, and go to state 4
    ENUM          shift, and go to state 5
    EXTERN        shift, and go to state 6
    FLOAT         shift, and go to state 7
    INT           shift, and go to state 8
    LONG          shift, and go to state 9
    REGISTER      shift, and go to state 10
    SHORT         shift, and go to state 11
    SIGNED        shift, and go to state 12
    STATIC        shift, and go to state 13
    STRUCT        shift, and go to state 14
    TYPEDEF       shift, and go to state 15
    UNION         shift, and go to state 16
    UNSIGNED      shift, and go to state 17
    VOID          shift, and go to state 18
    VOLATILE      shift, and go to state 19
    MUL           shift, and go to state 20
    PARENTHESE_L  shift, and go to state 21
    IDENTITY      shift, and go to state 22

    decl_specs              go to state 43
    storage_class_spec      go to state 28
    type_spec               go to state 29
    type_qualifier          go to state 30
    struct_or_union_spec    go to state 31
    struct_or_union         go to state 32
    struct_declarator_list  go to state 169
    struct_declarator       go to state 170
    enum_spec               go to state 33
    declarator              go to state 171
    direct_declarator       go to state 35
    pointer                 go to state 36
    typedef_name            go to state 37


State 84

   40 struct_or_union_spec: struct_or_union IDENTITY BRACE_L . struct_decl_list BRACE_R

    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    FLOAT     shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    SHORT     shift, and go to state 11
    SIGNED    shift, and go to state 12
    STRUCT    shift, and go to state 14
    UNION     shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    VOID      shift, and go to state 18
    VOLATILE  shift, and go to state 19
    IDENTITY  shift, and go to state 51

    type_spec             go to state 79
    type_qualifier        go to state 80
    struct_or_union_spec  go to state 31
    struct_or_union       go to state 32
    struct_decl_list      go to state 172
    struct_decl           go to state 82
    spec_qualifier_list   go to state 83
    enum_spec             go to state 33
    typedef_name          go to state 37


State 85

  145 jump_stat: BREAK . SEMI

    SEMI  shift, and go to state 173


State 86

  120 labeled_stat: CASE . const_exp COLON stat

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    PARENTHESE_L  shift, and go to state 124
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    conditional_exp   go to state 134
    const_exp         go to state 174
    logical_or_exp    go to state 136
    logical_and_exp   go to state 137
    inclusive_or_exp  go to state 138
    exclusive_or_exp  go to state 139
    and_exp           go to state 140
    equality_exp      go to state 141
    relational_exp    go to state 142
    shift_expression  go to state 143
    additive_exp      go to state 144
    mult_exp          go to state 145
    cast_exp          go to state 146
    unary_exp         go to state 147
    unary_operator    go to state 148
    postfix_exp       go to state 149
    primary_exp       go to state 150
    const_type        go to state 151


State 87

  122 exp_stat: COLON . SEMI

    SEMI  shift, and go to state 175


State 88

  144 jump_stat: CONTINUE . SEMI

    SEMI  shift, and go to state 176


State 89

  121 labeled_stat: DEFAULT . COLON stat

    COLON  shift, and go to state 177


State 90

  134 iteration_stat: DO . stat WHILE PARENTHESE_L exp PARENTHESE_R SEMI

    BREAK     shift, and go to state 85
    CASE      shift, and go to state 86
    COLON     shift, and go to state 87
    CONTINUE  shift, and go to state 88
    DEFAULT   shift, and go to state 89
    DO        shift, and go to state 90
    FOR       shift, and go to state 91
    GOTO      shift, and go to state 92
    IF        shift, and go to state 93
    RETURN    shift, and go to state 94
    SWITCH    shift, and go to state 95
    WHILE     shift, and go to state 96
    SEMI      shift, and go to state 97
    BRACE_L   shift, and go to state 58
    IDENTITY  shift, and go to state 178

    stat            go to state 179
    labeled_stat    go to state 102
    exp_stat        go to state 103
    compound_stat   go to state 104
    selection_stat  go to state 106
    iteration_stat  go to state 107
    jump_stat       go to state 108


State 91

  135 iteration_stat: FOR . PARENTHESE_L exp SEMI exp SEMI exp PARENTHESE_R stat
  136               | FOR . PARENTHESE_L exp SEMI exp SEMI PARENTHESE_R stat
  137               | FOR . PARENTHESE_L exp SEMI SEMI exp PARENTHESE_R stat
  138               | FOR . PARENTHESE_L exp SEMI SEMI PARENTHESE_R stat
  139               | FOR . PARENTHESE_L SEMI exp SEMI exp PARENTHESE_R stat
  140               | FOR . PARENTHESE_L SEMI exp SEMI PARENTHESE_R stat
  141               | FOR . PARENTHESE_L SEMI SEMI exp PARENTHESE_R stat
  142               | FOR . PARENTHESE_L SEMI SEMI PARENTHESE_R stat

    PARENTHESE_L  shift, and go to state 180


State 92

  143 jump_stat: GOTO . IDENTITY SEMI

    IDENTITY  shift, and go to state 181


State 93

  130 selection_stat: IF . PARENTHESE_L exp PARENTHESE_R stat
  131               | IF . PARENTHESE_L exp PARENTHESE_R stat ELSE stat

    PARENTHESE_L  shift, and go to state 182


State 94

  146 jump_stat: RETURN . exp SEMI
  147          | RETURN . SEMI

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    SEMI          shift, and go to state 183
    PARENTHESE_L  shift, and go to state 124
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    exp               go to state 184
    assignment_exp    go to state 185
    conditional_exp   go to state 160
    logical_or_exp    go to state 136
    logical_and_exp   go to state 137
    inclusive_or_exp  go to state 138
    exclusive_or_exp  go to state 139
    and_exp           go to state 140
    equality_exp      go to state 141
    relational_exp    go to state 142
    shift_expression  go to state 143
    additive_exp      go to state 144
    mult_exp          go to state 145
    cast_exp          go to state 146
    unary_exp         go to state 161
    unary_operator    go to state 148
    postfix_exp       go to state 149
    primary_exp       go to state 162
    const_type        go to state 151


State 95

  132 selection_stat: SWITCH . PARENTHESE_L exp PARENTHESE_R stat

    PARENTHESE_L  shift, and go to state 186


State 96

  133 iteration_stat: WHILE . PARENTHESE_L exp PARENTHESE_R stat

    PARENTHESE_L  shift, and go to state 187


State 97

  123 exp_stat: SEMI .

    $default  reduce using rule 123 (exp_stat)


State 98

  127 compound_stat: BRACE_L BRACE_R .

    $default  reduce using rule 127 (compound_stat)


State 99

  112 typedef_name: IDENTITY .
  119 labeled_stat: IDENTITY . COLON stat

    COLON  shift, and go to state 188

    $default  reduce using rule 112 (typedef_name)


State 100

   13 decl_list: decl_list . decl
  124 compound_stat: BRACE_L decl_list . stat_list BRACE_R
  126              | BRACE_L decl_list . BRACE_R

    AUTO      shift, and go to state 1
    BREAK     shift, and go to state 85
    CASE      shift, and go to state 86
    CHAR      shift, and go to state 2
    COLON     shift, and go to state 87
    CONST     shift, and go to state 3
    CONTINUE  shift, and go to state 88
    DEFAULT   shift, and go to state 89
    DO        shift, and go to state 90
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    FOR       shift, and go to state 91
    GOTO      shift, and go to state 92
    IF        shift, and go to state 93
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    REGISTER  shift, and go to state 10
    RETURN    shift, and go to state 94
    SHORT     shift, and go to state 11
    SIGNED    shift, and go to state 12
    STATIC    shift, and go to state 13
    STRUCT    shift, and go to state 14
    SWITCH    shift, and go to state 95
    TYPEDEF   shift, and go to state 15
    UNION     shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    VOID      shift, and go to state 18
    VOLATILE  shift, and go to state 19
    WHILE     shift, and go to state 96
    SEMI      shift, and go to state 97
    BRACE_L   shift, and go to state 58
    BRACE_R   shift, and go to state 189
    IDENTITY  shift, and go to state 99

    decl                  go to state 109
    decl_specs            go to state 61
    storage_class_spec    go to state 28
    type_spec             go to state 29
    type_qualifier        go to state 30
    struct_or_union_spec  go to state 31
    struct_or_union       go to state 32
    enum_spec             go to state 33
    typedef_name          go to state 37
    stat                  go to state 101
    labeled_stat          go to state 102
    exp_stat              go to state 103
    compound_stat         go to state 104
    stat_list             go to state 190
    selection_stat        go to state 106
    iteration_stat        go to state 107
    jump_stat             go to state 108


State 101

  128 stat_list: stat .

    $default  reduce using rule 128 (stat_list)


State 102

  113 stat: labeled_stat .

    $default  reduce using rule 113 (stat)


State 103

  114 stat: exp_stat .

    $default  reduce using rule 114 (stat)


State 104

  115 stat: compound_stat .

    $default  reduce using rule 115 (stat)


State 105

  125 compound_stat: BRACE_L stat_list . BRACE_R
  129 stat_list: stat_list . stat

    BREAK     shift, and go to state 85
    CASE      shift, and go to state 86
    COLON     shift, and go to state 87
    CONTINUE  shift, and go to state 88
    DEFAULT   shift, and go to state 89
    DO        shift, and go to state 90
    FOR       shift, and go to state 91
    GOTO      shift, and go to state 92
    IF        shift, and go to state 93
    RETURN    shift, and go to state 94
    SWITCH    shift, and go to state 95
    WHILE     shift, and go to state 96
    SEMI      shift, and go to state 97
    BRACE_L   shift, and go to state 58
    BRACE_R   shift, and go to state 191
    IDENTITY  shift, and go to state 178

    stat            go to state 192
    labeled_stat    go to state 102
    exp_stat        go to state 103
    compound_stat   go to state 104
    selection_stat  go to state 106
    iteration_stat  go to state 107
    jump_stat       go to state 108


State 106

  116 stat: selection_stat .

    $default  reduce using rule 116 (stat)


State 107

  117 stat: iteration_stat .

    $default  reduce using rule 117 (stat)


State 108

  118 stat: jump_stat .

    $default  reduce using rule 118 (stat)


State 109

   13 decl_list: decl_list decl .

    $default  reduce using rule 13 (decl_list)


State 110

    6 function_definition: declarator decl_list compound_stat .

    $default  reduce using rule 6 (function_definition)


State 111

   49 init_declarator: declarator .
   50                | declarator . ASSIGN initializer

    ASSIGN  shift, and go to state 76

    $default  reduce using rule 49 (init_declarator)


State 112

   77 direct_declarator: direct_declarator PARENTHESE_L PARENTHESE_R .

    $default  reduce using rule 77 (direct_declarator)


State 113

   91 id_list: IDENTITY .
  112 typedef_name: IDENTITY .

    COMMA         reduce using rule 91 (id_list)
    COMMA         [reduce using rule 112 (typedef_name)]
    PARENTHESE_R  reduce using rule 91 (id_list)
    PARENTHESE_R  [reduce using rule 112 (typedef_name)]
    $default      reduce using rule 112 (typedef_name)


State 114

   88 param_decl: decl_specs . declarator
   89           | decl_specs . abstract_declarator
   90           | decl_specs .

    AUTO          shift, and go to state 1
    CHAR          shift, and go to state 2
    CONST         shift, and go to state 3
    DOUBLE        shift, and go to state 4
    ENUM          shift, and go to state 5
    EXTERN        shift, and go to state 6
    FLOAT         shift, and go to state 7
    INT           shift, and go to state 8
    LONG          shift, and go to state 9
    REGISTER      shift, and go to state 10
    SHORT         shift, and go to state 11
    SIGNED        shift, and go to state 12
    STATIC        shift, and go to state 13
    STRUCT        shift, and go to state 14
    TYPEDEF       shift, and go to state 15
    UNION         shift, and go to state 16
    UNSIGNED      shift, and go to state 17
    VOID          shift, and go to state 18
    VOLATILE      shift, and go to state 19
    MUL           shift, and go to state 20
    PARENTHESE_L  shift, and go to state 193
    BRACKET_L     shift, and go to state 194
    BRACE_L       shift, and go to state 195
    IDENTITY      shift, and go to state 22

    $default  reduce using rule 90 (param_decl)

    decl_specs                  go to state 43
    storage_class_spec          go to state 28
    type_spec                   go to state 29
    type_qualifier              go to state 30
    struct_or_union_spec        go to state 31
    struct_or_union             go to state 32
    enum_spec                   go to state 33
    declarator                  go to state 196
    direct_declarator           go to state 35
    pointer                     go to state 197
    abstract_declarator         go to state 198
    direct_abstract_declarator  go to state 199
    typedef_name                go to state 37


State 115

   75 direct_declarator: direct_declarator PARENTHESE_L param_type_list . PARENTHESE_R

    PARENTHESE_R  shift, and go to state 200


State 116

   84 param_type_list: param_list .
   85                | param_list . COMMA ELLIPSIS
   87 param_list: param_list . COMMA param_decl

    COMMA  shift, and go to state 201

    $default  reduce using rule 84 (param_type_list)


State 117

   86 param_list: param_decl .

    $default  reduce using rule 86 (param_list)


State 118

   76 direct_declarator: direct_declarator PARENTHESE_L id_list . PARENTHESE_R
   92 id_list: id_list . COMMA IDENTITY

    COMMA         shift, and go to state 202
    PARENTHESE_R  shift, and go to state 203


State 119

  194 unary_exp: SIZEOF . unary_exp
  195          | SIZEOF . PARENTHESE_L type_name PARENTHESE_R

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    PARENTHESE_L  shift, and go to state 204
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    unary_exp       go to state 205
    unary_operator  go to state 148
    postfix_exp     go to state 149
    primary_exp     go to state 162
    const_type      go to state 151


State 120

  198 unary_operator: ADD .

    $default  reduce using rule 198 (unary_operator)


State 121

  199 unary_operator: SUB .

    $default  reduce using rule 199 (unary_operator)


State 122

  197 unary_operator: MUL .

    $default  reduce using rule 197 (unary_operator)


State 123

  200 unary_operator: NEG .

    $default  reduce using rule 200 (unary_operator)


State 124

  189 cast_exp: PARENTHESE_L . type_name PARENTHESE_R cast_exp
  213 primary_exp: PARENTHESE_L . exp PARENTHESE_R

    CHAR          shift, and go to state 2
    CONST         shift, and go to state 3
    DOUBLE        shift, and go to state 4
    ENUM          shift, and go to state 5
    FLOAT         shift, and go to state 7
    INT           shift, and go to state 8
    LONG          shift, and go to state 9
    SHORT         shift, and go to state 11
    SIGNED        shift, and go to state 12
    SIZEOF        shift, and go to state 119
    STRUCT        shift, and go to state 14
    UNION         shift, and go to state 16
    UNSIGNED      shift, and go to state 17
    VOID          shift, and go to state 18
    VOLATILE      shift, and go to state 19
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    PARENTHESE_L  shift, and go to state 124
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 206
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    type_spec             go to state 79
    type_qualifier        go to state 80
    struct_or_union_spec  go to state 31
    struct_or_union       go to state 32
    spec_qualifier_list   go to state 207
    enum_spec             go to state 33
    type_name             go to state 208
    typedef_name          go to state 37
    exp                   go to state 209
    assignment_exp        go to state 185
    conditional_exp       go to state 160
    logical_or_exp        go to state 136
    logical_and_exp       go to state 137
    inclusive_or_exp      go to state 138
    exclusive_or_exp      go to state 139
    and_exp               go to state 140
    equality_exp          go to state 141
    relational_exp        go to state 142
    shift_expression      go to state 143
    additive_exp          go to state 144
    mult_exp              go to state 145
    cast_exp              go to state 146
    unary_exp             go to state 161
    unary_operator        go to state 148
    postfix_exp           go to state 149
    primary_exp           go to state 162
    const_type            go to state 151


State 125

  191 unary_exp: POST_ADD . unary_exp

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    PARENTHESE_L  shift, and go to state 210
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    unary_exp       go to state 211
    unary_operator  go to state 148
    postfix_exp     go to state 149
    primary_exp     go to state 162
    const_type      go to state 151


State 126

  192 unary_exp: POST_SUB . unary_exp

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    PARENTHESE_L  shift, and go to state 210
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    unary_exp       go to state 212
    unary_operator  go to state 148
    postfix_exp     go to state 149
    primary_exp     go to state 162
    const_type      go to state 151


State 127

   74 direct_declarator: direct_declarator BRACKET_L BRACKET_R .

    $default  reduce using rule 74 (direct_declarator)


State 128

  196 unary_operator: AND_OP .

    $default  reduce using rule 196 (unary_operator)


State 129

  201 unary_operator: NOT .

    $default  reduce using rule 201 (unary_operator)


State 130

  210 primary_exp: IDENTITY .

    $default  reduce using rule 210 (primary_exp)


State 131

  216 const_type: INT_NUM .

    $default  reduce using rule 216 (const_type)


State 132

  217 const_type: FLOAT_NUM .

    $default  reduce using rule 217 (const_type)


State 133

  212 primary_exp: STRING .
  218 const_type: STRING .

    COLON          reduce using rule 212 (primary_exp)
    COLON          [reduce using rule 218 (const_type)]
    ADD            reduce using rule 212 (primary_exp)
    ADD            [reduce using rule 218 (const_type)]
    SUB            reduce using rule 212 (primary_exp)
    SUB            [reduce using rule 218 (const_type)]
    MUL            reduce using rule 212 (primary_exp)
    MUL            [reduce using rule 218 (const_type)]
    DIV            reduce using rule 212 (primary_exp)
    DIV            [reduce using rule 218 (const_type)]
    MOD            reduce using rule 212 (primary_exp)
    MOD            [reduce using rule 218 (const_type)]
    COMMA          reduce using rule 212 (primary_exp)
    COMMA          [reduce using rule 218 (const_type)]
    DOT            reduce using rule 212 (primary_exp)
    DOT            [reduce using rule 218 (const_type)]
    SEMI           reduce using rule 212 (primary_exp)
    SEMI           [reduce using rule 218 (const_type)]
    PARENTHESE_L   reduce using rule 212 (primary_exp)
    PARENTHESE_L   [reduce using rule 218 (const_type)]
    PARENTHESE_R   reduce using rule 212 (primary_exp)
    PARENTHESE_R   [reduce using rule 218 (const_type)]
    PELEMENT       reduce using rule 212 (primary_exp)
    PELEMENT       [reduce using rule 218 (const_type)]
    POST_ADD       reduce using rule 212 (primary_exp)
    POST_ADD       [reduce using rule 218 (const_type)]
    POST_SUB       reduce using rule 212 (primary_exp)
    POST_SUB       [reduce using rule 218 (const_type)]
    BRACKET_L      reduce using rule 212 (primary_exp)
    BRACKET_L      [reduce using rule 218 (const_type)]
    BRACKET_R      reduce using rule 212 (primary_exp)
    BRACKET_R      [reduce using rule 218 (const_type)]
    BRACE_R        reduce using rule 212 (primary_exp)
    BRACE_R        [reduce using rule 218 (const_type)]
    AND            reduce using rule 212 (primary_exp)
    AND            [reduce using rule 218 (const_type)]
    AND_OP         reduce using rule 212 (primary_exp)
    AND_OP         [reduce using rule 218 (const_type)]
    OR             reduce using rule 212 (primary_exp)
    OR             [reduce using rule 218 (const_type)]
    OR_OP          reduce using rule 212 (primary_exp)
    OR_OP          [reduce using rule 218 (const_type)]
    XOR_OP         reduce using rule 212 (primary_exp)
    XOR_OP         [reduce using rule 218 (const_type)]
    EQUAL          reduce using rule 212 (primary_exp)
    EQUAL          [reduce using rule 218 (const_type)]
    MOVE_L         reduce using rule 212 (primary_exp)
    MOVE_L         [reduce using rule 218 (const_type)]
    MOVE_R         reduce using rule 212 (primary_exp)
    MOVE_R         [reduce using rule 218 (const_type)]
    LESSER         reduce using rule 212 (primary_exp)
    LESSER         [reduce using rule 218 (const_type)]
    GREATER        reduce using rule 212 (primary_exp)
    GREATER        [reduce using rule 218 (const_type)]
    NOT_EQUAL      reduce using rule 212 (primary_exp)
    NOT_EQUAL      [reduce using rule 218 (const_type)]
    LEQUAL         reduce using rule 212 (primary_exp)
    LEQUAL         [reduce using rule 218 (const_type)]
    GEQUAL         reduce using rule 212 (primary_exp)
    GEQUAL         [reduce using rule 218 (const_type)]
    ASSIGN         reduce using rule 212 (primary_exp)
    ASSIGN         [reduce using rule 218 (const_type)]
    QUES           reduce using rule 212 (primary_exp)
    QUES           [reduce using rule 218 (const_type)]
    ASSIGN_OP      reduce using rule 212 (primary_exp)
    ASSIGN_OP      [reduce using rule 218 (const_type)]
    ASSIGN_SHIFTL  reduce using rule 212 (primary_exp)
    ASSIGN_SHIFTL  [reduce using rule 218 (const_type)]
    ASSIGN_SHIFTR  reduce using rule 212 (primary_exp)
    ASSIGN_SHIFTR  [reduce using rule 218 (const_type)]
    $default       reduce using rule 212 (primary_exp)


State 134

  158 const_exp: conditional_exp .

    $default  reduce using rule 158 (const_exp)


State 135

   73 direct_declarator: direct_declarator BRACKET_L const_exp . BRACKET_R

    BRACKET_R  shift, and go to state 213


State 136

  156 conditional_exp: logical_or_exp .
  157                | logical_or_exp . QUES exp COLON
  161 logical_or_exp: logical_or_exp . OR logical_and_exp

    OR    shift, and go to state 214
    QUES  shift, and go to state 215

    $default  reduce using rule 156 (conditional_exp)


State 137

  160 logical_or_exp: logical_and_exp .
  163 logical_and_exp: logical_and_exp . AND inclusive_or_exp

    AND  shift, and go to state 216

    $default  reduce using rule 160 (logical_or_exp)


State 138

  162 logical_and_exp: inclusive_or_exp .
  165 inclusive_or_exp: inclusive_or_exp . OR_OP exclusive_or_exp

    OR_OP  shift, and go to state 217

    $default  reduce using rule 162 (logical_and_exp)


State 139

  164 inclusive_or_exp: exclusive_or_exp .
  167 exclusive_or_exp: exclusive_or_exp . XOR_OP and_exp

    XOR_OP  shift, and go to state 218

    $default  reduce using rule 164 (inclusive_or_exp)


State 140

  166 exclusive_or_exp: and_exp .
  169 and_exp: and_exp . AND_OP equality_exp

    AND_OP  shift, and go to state 219

    $default  reduce using rule 166 (exclusive_or_exp)


State 141

  168 and_exp: equality_exp .
  171 equality_exp: equality_exp . EQUAL relational_exp
  172             | equality_exp . NOT_EQUAL relational_exp

    EQUAL      shift, and go to state 220
    NOT_EQUAL  shift, and go to state 221

    $default  reduce using rule 168 (and_exp)


State 142

  170 equality_exp: relational_exp .
  174 relational_exp: relational_exp . LESSER shift_expression
  175               | relational_exp . GREATER shift_expression
  176               | relational_exp . LEQUAL shift_expression
  177               | relational_exp . GEQUAL shift_expression

    LESSER   shift, and go to state 222
    GREATER  shift, and go to state 223
    LEQUAL   shift, and go to state 224
    GEQUAL   shift, and go to state 225

    $default  reduce using rule 170 (equality_exp)


State 143

  173 relational_exp: shift_expression .
  179 shift_expression: shift_expression . MOVE_L additive_exp
  180                 | shift_expression . MOVE_R additive_exp

    MOVE_L  shift, and go to state 226
    MOVE_R  shift, and go to state 227

    $default  reduce using rule 173 (relational_exp)


State 144

  178 shift_expression: additive_exp .
  182 additive_exp: additive_exp . ADD mult_exp
  183             | additive_exp . SUB mult_exp

    ADD  shift, and go to state 228
    SUB  shift, and go to state 229

    $default  reduce using rule 178 (shift_expression)


State 145

  181 additive_exp: mult_exp .
  185 mult_exp: mult_exp . MUL cast_exp
  186         | mult_exp . DIV cast_exp
  187         | mult_exp . MOD cast_exp

    MUL  shift, and go to state 230
    DIV  shift, and go to state 231
    MOD  shift, and go to state 232

    $default  reduce using rule 181 (additive_exp)


State 146

  184 mult_exp: cast_exp .

    $default  reduce using rule 184 (mult_exp)


State 147

  188 cast_exp: unary_exp .

    $default  reduce using rule 188 (cast_exp)


State 148

  193 unary_exp: unary_operator . cast_exp

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    PARENTHESE_L  shift, and go to state 124
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    cast_exp        go to state 233
    unary_exp       go to state 147
    unary_operator  go to state 148
    postfix_exp     go to state 149
    primary_exp     go to state 162
    const_type      go to state 151


State 149

  190 unary_exp: postfix_exp .
  203 postfix_exp: postfix_exp . BRACKET_L exp BRACKET_R
  204            | postfix_exp . PARENTHESE_L argument_exp_list PARENTHESE_R
  205            | postfix_exp . PARENTHESE_L PARENTHESE_R
  206            | postfix_exp . DOT IDENTITY
  207            | postfix_exp . PELEMENT IDENTITY
  208            | postfix_exp . POST_ADD
  209            | postfix_exp . POST_SUB

    DOT           shift, and go to state 234
    PARENTHESE_L  shift, and go to state 235
    PELEMENT      shift, and go to state 236
    POST_ADD      shift, and go to state 237
    POST_SUB      shift, and go to state 238
    BRACKET_L     shift, and go to state 239

    $default  reduce using rule 190 (unary_exp)


State 150

  159 const_exp: primary_exp .
  202 postfix_exp: primary_exp .

    COLON      reduce using rule 159 (const_exp)
    COLON      [reduce using rule 202 (postfix_exp)]
    COMMA      reduce using rule 159 (const_exp)
    COMMA      [reduce using rule 202 (postfix_exp)]
    SEMI       reduce using rule 159 (const_exp)
    SEMI       [reduce using rule 202 (postfix_exp)]
    BRACKET_R  reduce using rule 159 (const_exp)
    BRACKET_R  [reduce using rule 202 (postfix_exp)]
    BRACE_R    reduce using rule 159 (const_exp)
    BRACE_R    [reduce using rule 202 (postfix_exp)]
    $default   reduce using rule 202 (postfix_exp)


State 151

  211 primary_exp: const_type .

    $default  reduce using rule 211 (primary_exp)


State 152

   67 enumerator: IDENTITY ASSIGN . const_exp

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    PARENTHESE_L  shift, and go to state 124
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    conditional_exp   go to state 134
    const_exp         go to state 240
    logical_or_exp    go to state 136
    logical_and_exp   go to state 137
    inclusive_or_exp  go to state 138
    exclusive_or_exp  go to state 139
    and_exp           go to state 140
    equality_exp      go to state 141
    relational_exp    go to state 142
    shift_expression  go to state 143
    additive_exp      go to state 144
    mult_exp          go to state 145
    cast_exp          go to state 146
    unary_exp         go to state 147
    unary_operator    go to state 148
    postfix_exp       go to state 149
    primary_exp       go to state 150
    const_type        go to state 151


State 153

   65 enumerator_list: enumerator_list COMMA . enumerator

    IDENTITY  shift, and go to state 67

    enumerator  go to state 241


State 154

   62 enum_spec: ENUM BRACE_L enumerator_list BRACE_R .

    $default  reduce using rule 62 (enum_spec)


State 155

   61 enum_spec: ENUM IDENTITY BRACE_L enumerator_list . BRACE_R
   65 enumerator_list: enumerator_list . COMMA enumerator

    COMMA    shift, and go to state 153
    BRACE_R  shift, and go to state 242


State 156

   48 init_declarator_list: init_declarator_list COMMA init_declarator .

    $default  reduce using rule 48 (init_declarator_list)


State 157

   94 initializer: BRACE_L . initializer_list BRACE_R
   95            | BRACE_L . initializer_list COMMA BRACE_R

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    PARENTHESE_L  shift, and go to state 124
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    BRACE_L       shift, and go to state 157
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    initializer       go to state 243
    initializer_list  go to state 244
    assignment_exp    go to state 159
    conditional_exp   go to state 160
    logical_or_exp    go to state 136
    logical_and_exp   go to state 137
    inclusive_or_exp  go to state 138
    exclusive_or_exp  go to state 139
    and_exp           go to state 140
    equality_exp      go to state 141
    relational_exp    go to state 142
    shift_expression  go to state 143
    additive_exp      go to state 144
    mult_exp          go to state 145
    cast_exp          go to state 146
    unary_exp         go to state 161
    unary_operator    go to state 148
    postfix_exp       go to state 149
    primary_exp       go to state 162
    const_type        go to state 151


State 158

   50 init_declarator: declarator ASSIGN initializer .

    $default  reduce using rule 50 (init_declarator)


State 159

   93 initializer: assignment_exp .

    $default  reduce using rule 93 (initializer)


State 160

  150 assignment_exp: conditional_exp .

    $default  reduce using rule 150 (assignment_exp)


State 161

  151 assignment_exp: unary_exp . assignment_operator assignment_exp
  188 cast_exp: unary_exp .

    ASSIGN         shift, and go to state 245
    ASSIGN_OP      shift, and go to state 246
    ASSIGN_SHIFTL  shift, and go to state 247
    ASSIGN_SHIFTR  shift, and go to state 248

    $default  reduce using rule 188 (cast_exp)

    assignment_operator  go to state 249


State 162

  202 postfix_exp: primary_exp .

    $default  reduce using rule 202 (postfix_exp)


State 163

    5 function_definition: decl_specs declarator decl_list compound_stat .

    $default  reduce using rule 5 (function_definition)


State 164

   52 spec_qualifier_list: type_spec spec_qualifier_list .

    $default  reduce using rule 52 (spec_qualifier_list)


State 165

   54 spec_qualifier_list: type_qualifier spec_qualifier_list .

    $default  reduce using rule 54 (spec_qualifier_list)


State 166

   41 struct_or_union_spec: struct_or_union BRACE_L struct_decl_list BRACE_R .

    $default  reduce using rule 41 (struct_or_union_spec)


State 167

   46 struct_decl_list: struct_decl_list struct_decl .

    $default  reduce using rule 46 (struct_decl_list)


State 168

   60 struct_declarator: COLON . const_exp

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    PARENTHESE_L  shift, and go to state 124
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    conditional_exp   go to state 134
    const_exp         go to state 250
    logical_or_exp    go to state 136
    logical_and_exp   go to state 137
    inclusive_or_exp  go to state 138
    exclusive_or_exp  go to state 139
    and_exp           go to state 140
    equality_exp      go to state 141
    relational_exp    go to state 142
    shift_expression  go to state 143
    additive_exp      go to state 144
    mult_exp          go to state 145
    cast_exp          go to state 146
    unary_exp         go to state 147
    unary_operator    go to state 148
    postfix_exp       go to state 149
    primary_exp       go to state 150
    const_type        go to state 151


State 169

   51 struct_decl: spec_qualifier_list struct_declarator_list . SEMI
   57 struct_declarator_list: struct_declarator_list . COMMA struct_declarator

    COMMA  shift, and go to state 251
    SEMI   shift, and go to state 252


State 170

   56 struct_declarator_list: struct_declarator .

    $default  reduce using rule 56 (struct_declarator_list)


State 171

   58 struct_declarator: declarator .
   59                  | declarator . COLON const_exp

    COLON  shift, and go to state 253

    $default  reduce using rule 58 (struct_declarator)


State 172

   40 struct_or_union_spec: struct_or_union IDENTITY BRACE_L struct_decl_list . BRACE_R
   46 struct_decl_list: struct_decl_list . struct_decl

    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    FLOAT     shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    SHORT     shift, and go to state 11
    SIGNED    shift, and go to state 12
    STRUCT    shift, and go to state 14
    UNION     shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    VOID      shift, and go to state 18
    VOLATILE  shift, and go to state 19
    BRACE_R   shift, and go to state 254
    IDENTITY  shift, and go to state 51

    type_spec             go to state 79
    type_qualifier        go to state 80
    struct_or_union_spec  go to state 31
    struct_or_union       go to state 32
    struct_decl           go to state 167
    spec_qualifier_list   go to state 83
    enum_spec             go to state 33
    typedef_name          go to state 37


State 173

  145 jump_stat: BREAK SEMI .

    $default  reduce using rule 145 (jump_stat)


State 174

  120 labeled_stat: CASE const_exp . COLON stat

    COLON  shift, and go to state 255


State 175

  122 exp_stat: COLON SEMI .

    $default  reduce using rule 122 (exp_stat)


State 176

  144 jump_stat: CONTINUE SEMI .

    $default  reduce using rule 144 (jump_stat)


State 177

  121 labeled_stat: DEFAULT COLON . stat

    BREAK     shift, and go to state 85
    CASE      shift, and go to state 86
    COLON     shift, and go to state 87
    CONTINUE  shift, and go to state 88
    DEFAULT   shift, and go to state 89
    DO        shift, and go to state 90
    FOR       shift, and go to state 91
    GOTO      shift, and go to state 92
    IF        shift, and go to state 93
    RETURN    shift, and go to state 94
    SWITCH    shift, and go to state 95
    WHILE     shift, and go to state 96
    SEMI      shift, and go to state 97
    BRACE_L   shift, and go to state 58
    IDENTITY  shift, and go to state 178

    stat            go to state 256
    labeled_stat    go to state 102
    exp_stat        go to state 103
    compound_stat   go to state 104
    selection_stat  go to state 106
    iteration_stat  go to state 107
    jump_stat       go to state 108


State 178

  119 labeled_stat: IDENTITY . COLON stat

    COLON  shift, and go to state 188


State 179

  134 iteration_stat: DO stat . WHILE PARENTHESE_L exp PARENTHESE_R SEMI

    WHILE  shift, and go to state 257


State 180

  135 iteration_stat: FOR PARENTHESE_L . exp SEMI exp SEMI exp PARENTHESE_R stat
  136               | FOR PARENTHESE_L . exp SEMI exp SEMI PARENTHESE_R stat
  137               | FOR PARENTHESE_L . exp SEMI SEMI exp PARENTHESE_R stat
  138               | FOR PARENTHESE_L . exp SEMI SEMI PARENTHESE_R stat
  139               | FOR PARENTHESE_L . SEMI exp SEMI exp PARENTHESE_R stat
  140               | FOR PARENTHESE_L . SEMI exp SEMI PARENTHESE_R stat
  141               | FOR PARENTHESE_L . SEMI SEMI exp PARENTHESE_R stat
  142               | FOR PARENTHESE_L . SEMI SEMI PARENTHESE_R stat

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    SEMI          shift, and go to state 258
    PARENTHESE_L  shift, and go to state 124
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    exp               go to state 259
    assignment_exp    go to state 185
    conditional_exp   go to state 160
    logical_or_exp    go to state 136
    logical_and_exp   go to state 137
    inclusive_or_exp  go to state 138
    exclusive_or_exp  go to state 139
    and_exp           go to state 140
    equality_exp      go to state 141
    relational_exp    go to state 142
    shift_expression  go to state 143
    additive_exp      go to state 144
    mult_exp          go to state 145
    cast_exp          go to state 146
    unary_exp         go to state 161
    unary_operator    go to state 148
    postfix_exp       go to state 149
    primary_exp       go to state 162
    const_type        go to state 151


State 181

  143 jump_stat: GOTO IDENTITY . SEMI

    SEMI  shift, and go to state 260


State 182

  130 selection_stat: IF PARENTHESE_L . exp PARENTHESE_R stat
  131               | IF PARENTHESE_L . exp PARENTHESE_R stat ELSE stat

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    PARENTHESE_L  shift, and go to state 124
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    exp               go to state 261
    assignment_exp    go to state 185
    conditional_exp   go to state 160
    logical_or_exp    go to state 136
    logical_and_exp   go to state 137
    inclusive_or_exp  go to state 138
    exclusive_or_exp  go to state 139
    and_exp           go to state 140
    equality_exp      go to state 141
    relational_exp    go to state 142
    shift_expression  go to state 143
    additive_exp      go to state 144
    mult_exp          go to state 145
    cast_exp          go to state 146
    unary_exp         go to state 161
    unary_operator    go to state 148
    postfix_exp       go to state 149
    primary_exp       go to state 162
    const_type        go to state 151


State 183

  147 jump_stat: RETURN SEMI .

    $default  reduce using rule 147 (jump_stat)


State 184

  146 jump_stat: RETURN exp . SEMI
  149 exp: exp . COMMA assignment_exp

    COMMA  shift, and go to state 262
    SEMI   shift, and go to state 263


State 185

  148 exp: assignment_exp .

    $default  reduce using rule 148 (exp)


State 186

  132 selection_stat: SWITCH PARENTHESE_L . exp PARENTHESE_R stat

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    PARENTHESE_L  shift, and go to state 124
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    exp               go to state 264
    assignment_exp    go to state 185
    conditional_exp   go to state 160
    logical_or_exp    go to state 136
    logical_and_exp   go to state 137
    inclusive_or_exp  go to state 138
    exclusive_or_exp  go to state 139
    and_exp           go to state 140
    equality_exp      go to state 141
    relational_exp    go to state 142
    shift_expression  go to state 143
    additive_exp      go to state 144
    mult_exp          go to state 145
    cast_exp          go to state 146
    unary_exp         go to state 161
    unary_operator    go to state 148
    postfix_exp       go to state 149
    primary_exp       go to state 162
    const_type        go to state 151


State 187

  133 iteration_stat: WHILE PARENTHESE_L . exp PARENTHESE_R stat

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    PARENTHESE_L  shift, and go to state 124
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    exp               go to state 265
    assignment_exp    go to state 185
    conditional_exp   go to state 160
    logical_or_exp    go to state 136
    logical_and_exp   go to state 137
    inclusive_or_exp  go to state 138
    exclusive_or_exp  go to state 139
    and_exp           go to state 140
    equality_exp      go to state 141
    relational_exp    go to state 142
    shift_expression  go to state 143
    additive_exp      go to state 144
    mult_exp          go to state 145
    cast_exp          go to state 146
    unary_exp         go to state 161
    unary_operator    go to state 148
    postfix_exp       go to state 149
    primary_exp       go to state 162
    const_type        go to state 151


State 188

  119 labeled_stat: IDENTITY COLON . stat

    BREAK     shift, and go to state 85
    CASE      shift, and go to state 86
    COLON     shift, and go to state 87
    CONTINUE  shift, and go to state 88
    DEFAULT   shift, and go to state 89
    DO        shift, and go to state 90
    FOR       shift, and go to state 91
    GOTO      shift, and go to state 92
    IF        shift, and go to state 93
    RETURN    shift, and go to state 94
    SWITCH    shift, and go to state 95
    WHILE     shift, and go to state 96
    SEMI      shift, and go to state 97
    BRACE_L   shift, and go to state 58
    IDENTITY  shift, and go to state 178

    stat            go to state 266
    labeled_stat    go to state 102
    exp_stat        go to state 103
    compound_stat   go to state 104
    selection_stat  go to state 106
    iteration_stat  go to state 107
    jump_stat       go to state 108


State 189

  126 compound_stat: BRACE_L decl_list BRACE_R .

    $default  reduce using rule 126 (compound_stat)


State 190

  124 compound_stat: BRACE_L decl_list stat_list . BRACE_R
  129 stat_list: stat_list . stat

    BREAK     shift, and go to state 85
    CASE      shift, and go to state 86
    COLON     shift, and go to state 87
    CONTINUE  shift, and go to state 88
    DEFAULT   shift, and go to state 89
    DO        shift, and go to state 90
    FOR       shift, and go to state 91
    GOTO      shift, and go to state 92
    IF        shift, and go to state 93
    RETURN    shift, and go to state 94
    SWITCH    shift, and go to state 95
    WHILE     shift, and go to state 96
    SEMI      shift, and go to state 97
    BRACE_L   shift, and go to state 58
    BRACE_R   shift, and go to state 267
    IDENTITY  shift, and go to state 178

    stat            go to state 192
    labeled_stat    go to state 102
    exp_stat        go to state 103
    compound_stat   go to state 104
    selection_stat  go to state 106
    iteration_stat  go to state 107
    jump_stat       go to state 108


State 191

  125 compound_stat: BRACE_L stat_list BRACE_R .

    $default  reduce using rule 125 (compound_stat)


State 192

  129 stat_list: stat_list stat .

    $default  reduce using rule 129 (stat_list)


State 193

   72 direct_declarator: PARENTHESE_L . declarator PARENTHESE_R
  103 direct_abstract_declarator: PARENTHESE_L . abstract_declarator PARENTHESE_R

    AUTO          shift, and go to state 1
    CHAR          shift, and go to state 2
    CONST         shift, and go to state 3
    DOUBLE        shift, and go to state 4
    ENUM          shift, and go to state 5
    EXTERN        shift, and go to state 6
    FLOAT         shift, and go to state 7
    INT           shift, and go to state 8
    LONG          shift, and go to state 9
    REGISTER      shift, and go to state 10
    SHORT         shift, and go to state 11
    SIGNED        shift, and go to state 12
    STATIC        shift, and go to state 13
    STRUCT        shift, and go to state 14
    TYPEDEF       shift, and go to state 15
    UNION         shift, and go to state 16
    UNSIGNED      shift, and go to state 17
    VOID          shift, and go to state 18
    VOLATILE      shift, and go to state 19
    MUL           shift, and go to state 20
    PARENTHESE_L  shift, and go to state 193
    BRACKET_L     shift, and go to state 194
    BRACE_L       shift, and go to state 195
    IDENTITY      shift, and go to state 22

    decl_specs                  go to state 43
    storage_class_spec          go to state 28
    type_spec                   go to state 29
    type_qualifier              go to state 30
    struct_or_union_spec        go to state 31
    struct_or_union             go to state 32
    enum_spec                   go to state 33
    declarator                  go to state 44
    direct_declarator           go to state 35
    pointer                     go to state 197
    abstract_declarator         go to state 268
    direct_abstract_declarator  go to state 199
    typedef_name                go to state 37


State 194

  105 direct_abstract_declarator: BRACKET_L . const_exp BRACKET_R
  107                           | BRACKET_L . BRACKET_R

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    PARENTHESE_L  shift, and go to state 124
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    BRACKET_R     shift, and go to state 269
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    conditional_exp   go to state 134
    const_exp         go to state 270
    logical_or_exp    go to state 136
    logical_and_exp   go to state 137
    inclusive_or_exp  go to state 138
    exclusive_or_exp  go to state 139
    and_exp           go to state 140
    equality_exp      go to state 141
    relational_exp    go to state 142
    shift_expression  go to state 143
    additive_exp      go to state 144
    mult_exp          go to state 145
    cast_exp          go to state 146
    unary_exp         go to state 147
    unary_operator    go to state 148
    postfix_exp       go to state 149
    primary_exp       go to state 150
    const_type        go to state 151


State 195

  109 direct_abstract_declarator: BRACE_L . param_type_list BRACE_R
  111                           | BRACE_L . BRACE_R

    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    REGISTER  shift, and go to state 10
    SHORT     shift, and go to state 11
    SIGNED    shift, and go to state 12
    STATIC    shift, and go to state 13
    STRUCT    shift, and go to state 14
    TYPEDEF   shift, and go to state 15
    UNION     shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    VOID      shift, and go to state 18
    VOLATILE  shift, and go to state 19
    BRACE_R   shift, and go to state 271
    IDENTITY  shift, and go to state 51

    decl_specs            go to state 114
    storage_class_spec    go to state 28
    type_spec             go to state 29
    type_qualifier        go to state 30
    struct_or_union_spec  go to state 31
    struct_or_union       go to state 32
    enum_spec             go to state 33
    param_type_list       go to state 272
    param_list            go to state 116
    param_decl            go to state 117
    typedef_name          go to state 37


State 196

   88 param_decl: decl_specs declarator .

    $default  reduce using rule 88 (param_decl)


State 197

   68 declarator: pointer . direct_declarator
  100 abstract_declarator: pointer .
  101                    | pointer . direct_abstract_declarator

    PARENTHESE_L  shift, and go to state 193
    BRACKET_L     shift, and go to state 194
    BRACE_L       shift, and go to state 195
    IDENTITY      shift, and go to state 65

    $default  reduce using rule 100 (abstract_declarator)

    direct_declarator           go to state 66
    direct_abstract_declarator  go to state 273


State 198

   89 param_decl: decl_specs abstract_declarator .

    $default  reduce using rule 89 (param_decl)


State 199

  102 abstract_declarator: direct_abstract_declarator .
  104 direct_abstract_declarator: direct_abstract_declarator . BRACKET_L const_exp BRACKET_R
  106                           | direct_abstract_declarator . BRACKET_L BRACKET_R
  108                           | direct_abstract_declarator . BRACE_L param_type_list BRACE_R
  110                           | direct_abstract_declarator . BRACE_L BRACE_R

    BRACKET_L  shift, and go to state 274
    BRACE_L    shift, and go to state 275

    $default  reduce using rule 102 (abstract_declarator)


State 200

   75 direct_declarator: direct_declarator PARENTHESE_L param_type_list PARENTHESE_R .

    $default  reduce using rule 75 (direct_declarator)


State 201

   85 param_type_list: param_list COMMA . ELLIPSIS
   87 param_list: param_list COMMA . param_decl

    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ELLIPSIS  shift, and go to state 276
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    REGISTER  shift, and go to state 10
    SHORT     shift, and go to state 11
    SIGNED    shift, and go to state 12
    STATIC    shift, and go to state 13
    STRUCT    shift, and go to state 14
    TYPEDEF   shift, and go to state 15
    UNION     shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    VOID      shift, and go to state 18
    VOLATILE  shift, and go to state 19
    IDENTITY  shift, and go to state 51

    decl_specs            go to state 114
    storage_class_spec    go to state 28
    type_spec             go to state 29
    type_qualifier        go to state 30
    struct_or_union_spec  go to state 31
    struct_or_union       go to state 32
    enum_spec             go to state 33
    param_decl            go to state 277
    typedef_name          go to state 37


State 202

   92 id_list: id_list COMMA . IDENTITY

    IDENTITY  shift, and go to state 278


State 203

   76 direct_declarator: direct_declarator PARENTHESE_L id_list PARENTHESE_R .

    $default  reduce using rule 76 (direct_declarator)


State 204

  195 unary_exp: SIZEOF PARENTHESE_L . type_name PARENTHESE_R
  213 primary_exp: PARENTHESE_L . exp PARENTHESE_R

    CHAR          shift, and go to state 2
    CONST         shift, and go to state 3
    DOUBLE        shift, and go to state 4
    ENUM          shift, and go to state 5
    FLOAT         shift, and go to state 7
    INT           shift, and go to state 8
    LONG          shift, and go to state 9
    SHORT         shift, and go to state 11
    SIGNED        shift, and go to state 12
    SIZEOF        shift, and go to state 119
    STRUCT        shift, and go to state 14
    UNION         shift, and go to state 16
    UNSIGNED      shift, and go to state 17
    VOID          shift, and go to state 18
    VOLATILE      shift, and go to state 19
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    PARENTHESE_L  shift, and go to state 124
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 206
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    type_spec             go to state 79
    type_qualifier        go to state 80
    struct_or_union_spec  go to state 31
    struct_or_union       go to state 32
    spec_qualifier_list   go to state 207
    enum_spec             go to state 33
    type_name             go to state 279
    typedef_name          go to state 37
    exp                   go to state 209
    assignment_exp        go to state 185
    conditional_exp       go to state 160
    logical_or_exp        go to state 136
    logical_and_exp       go to state 137
    inclusive_or_exp      go to state 138
    exclusive_or_exp      go to state 139
    and_exp               go to state 140
    equality_exp          go to state 141
    relational_exp        go to state 142
    shift_expression      go to state 143
    additive_exp          go to state 144
    mult_exp              go to state 145
    cast_exp              go to state 146
    unary_exp             go to state 161
    unary_operator        go to state 148
    postfix_exp           go to state 149
    primary_exp           go to state 162
    const_type            go to state 151


State 205

  194 unary_exp: SIZEOF unary_exp .

    $default  reduce using rule 194 (unary_exp)


State 206

  112 typedef_name: IDENTITY .
  210 primary_exp: IDENTITY .

    CHAR          reduce using rule 112 (typedef_name)
    CONST         reduce using rule 112 (typedef_name)
    DOUBLE        reduce using rule 112 (typedef_name)
    ENUM          reduce using rule 112 (typedef_name)
    FLOAT         reduce using rule 112 (typedef_name)
    INT           reduce using rule 112 (typedef_name)
    LONG          reduce using rule 112 (typedef_name)
    SHORT         reduce using rule 112 (typedef_name)
    SIGNED        reduce using rule 112 (typedef_name)
    STRUCT        reduce using rule 112 (typedef_name)
    UNION         reduce using rule 112 (typedef_name)
    UNSIGNED      reduce using rule 112 (typedef_name)
    VOID          reduce using rule 112 (typedef_name)
    VOLATILE      reduce using rule 112 (typedef_name)
    MUL           reduce using rule 112 (typedef_name)
    MUL           [reduce using rule 210 (primary_exp)]
    PARENTHESE_L  reduce using rule 112 (typedef_name)
    PARENTHESE_L  [reduce using rule 210 (primary_exp)]
    PARENTHESE_R  reduce using rule 112 (typedef_name)
    PARENTHESE_R  [reduce using rule 210 (primary_exp)]
    BRACKET_L     reduce using rule 112 (typedef_name)
    BRACKET_L     [reduce using rule 210 (primary_exp)]
    BRACE_L       reduce using rule 112 (typedef_name)
    IDENTITY      reduce using rule 112 (typedef_name)
    $default      reduce using rule 210 (primary_exp)


State 207

   98 type_name: spec_qualifier_list . abstract_declarator
   99          | spec_qualifier_list .

    MUL           shift, and go to state 20
    PARENTHESE_L  shift, and go to state 280
    BRACKET_L     shift, and go to state 194
    BRACE_L       shift, and go to state 195

    $default  reduce using rule 99 (type_name)

    pointer                     go to state 281
    abstract_declarator         go to state 282
    direct_abstract_declarator  go to state 199


State 208

  189 cast_exp: PARENTHESE_L type_name . PARENTHESE_R cast_exp

    PARENTHESE_R  shift, and go to state 283


State 209

  149 exp: exp . COMMA assignment_exp
  213 primary_exp: PARENTHESE_L exp . PARENTHESE_R

    COMMA         shift, and go to state 262
    PARENTHESE_R  shift, and go to state 284


State 210

  213 primary_exp: PARENTHESE_L . exp PARENTHESE_R

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    PARENTHESE_L  shift, and go to state 124
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    exp               go to state 209
    assignment_exp    go to state 185
    conditional_exp   go to state 160
    logical_or_exp    go to state 136
    logical_and_exp   go to state 137
    inclusive_or_exp  go to state 138
    exclusive_or_exp  go to state 139
    and_exp           go to state 140
    equality_exp      go to state 141
    relational_exp    go to state 142
    shift_expression  go to state 143
    additive_exp      go to state 144
    mult_exp          go to state 145
    cast_exp          go to state 146
    unary_exp         go to state 161
    unary_operator    go to state 148
    postfix_exp       go to state 149
    primary_exp       go to state 162
    const_type        go to state 151


State 211

  191 unary_exp: POST_ADD unary_exp .

    $default  reduce using rule 191 (unary_exp)


State 212

  192 unary_exp: POST_SUB unary_exp .

    $default  reduce using rule 192 (unary_exp)


State 213

   73 direct_declarator: direct_declarator BRACKET_L const_exp BRACKET_R .

    $default  reduce using rule 73 (direct_declarator)


State 214

  161 logical_or_exp: logical_or_exp OR . logical_and_exp

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    PARENTHESE_L  shift, and go to state 124
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    logical_and_exp   go to state 285
    inclusive_or_exp  go to state 138
    exclusive_or_exp  go to state 139
    and_exp           go to state 140
    equality_exp      go to state 141
    relational_exp    go to state 142
    shift_expression  go to state 143
    additive_exp      go to state 144
    mult_exp          go to state 145
    cast_exp          go to state 146
    unary_exp         go to state 147
    unary_operator    go to state 148
    postfix_exp       go to state 149
    primary_exp       go to state 162
    const_type        go to state 151


State 215

  157 conditional_exp: logical_or_exp QUES . exp COLON

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    PARENTHESE_L  shift, and go to state 124
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    exp               go to state 286
    assignment_exp    go to state 185
    conditional_exp   go to state 160
    logical_or_exp    go to state 136
    logical_and_exp   go to state 137
    inclusive_or_exp  go to state 138
    exclusive_or_exp  go to state 139
    and_exp           go to state 140
    equality_exp      go to state 141
    relational_exp    go to state 142
    shift_expression  go to state 143
    additive_exp      go to state 144
    mult_exp          go to state 145
    cast_exp          go to state 146
    unary_exp         go to state 161
    unary_operator    go to state 148
    postfix_exp       go to state 149
    primary_exp       go to state 162
    const_type        go to state 151


State 216

  163 logical_and_exp: logical_and_exp AND . inclusive_or_exp

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    PARENTHESE_L  shift, and go to state 124
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    inclusive_or_exp  go to state 287
    exclusive_or_exp  go to state 139
    and_exp           go to state 140
    equality_exp      go to state 141
    relational_exp    go to state 142
    shift_expression  go to state 143
    additive_exp      go to state 144
    mult_exp          go to state 145
    cast_exp          go to state 146
    unary_exp         go to state 147
    unary_operator    go to state 148
    postfix_exp       go to state 149
    primary_exp       go to state 162
    const_type        go to state 151


State 217

  165 inclusive_or_exp: inclusive_or_exp OR_OP . exclusive_or_exp

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    PARENTHESE_L  shift, and go to state 124
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    exclusive_or_exp  go to state 288
    and_exp           go to state 140
    equality_exp      go to state 141
    relational_exp    go to state 142
    shift_expression  go to state 143
    additive_exp      go to state 144
    mult_exp          go to state 145
    cast_exp          go to state 146
    unary_exp         go to state 147
    unary_operator    go to state 148
    postfix_exp       go to state 149
    primary_exp       go to state 162
    const_type        go to state 151


State 218

  167 exclusive_or_exp: exclusive_or_exp XOR_OP . and_exp

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    PARENTHESE_L  shift, and go to state 124
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    and_exp           go to state 289
    equality_exp      go to state 141
    relational_exp    go to state 142
    shift_expression  go to state 143
    additive_exp      go to state 144
    mult_exp          go to state 145
    cast_exp          go to state 146
    unary_exp         go to state 147
    unary_operator    go to state 148
    postfix_exp       go to state 149
    primary_exp       go to state 162
    const_type        go to state 151


State 219

  169 and_exp: and_exp AND_OP . equality_exp

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    PARENTHESE_L  shift, and go to state 124
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    equality_exp      go to state 290
    relational_exp    go to state 142
    shift_expression  go to state 143
    additive_exp      go to state 144
    mult_exp          go to state 145
    cast_exp          go to state 146
    unary_exp         go to state 147
    unary_operator    go to state 148
    postfix_exp       go to state 149
    primary_exp       go to state 162
    const_type        go to state 151


State 220

  171 equality_exp: equality_exp EQUAL . relational_exp

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    PARENTHESE_L  shift, and go to state 124
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    relational_exp    go to state 291
    shift_expression  go to state 143
    additive_exp      go to state 144
    mult_exp          go to state 145
    cast_exp          go to state 146
    unary_exp         go to state 147
    unary_operator    go to state 148
    postfix_exp       go to state 149
    primary_exp       go to state 162
    const_type        go to state 151


State 221

  172 equality_exp: equality_exp NOT_EQUAL . relational_exp

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    PARENTHESE_L  shift, and go to state 124
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    relational_exp    go to state 292
    shift_expression  go to state 143
    additive_exp      go to state 144
    mult_exp          go to state 145
    cast_exp          go to state 146
    unary_exp         go to state 147
    unary_operator    go to state 148
    postfix_exp       go to state 149
    primary_exp       go to state 162
    const_type        go to state 151


State 222

  174 relational_exp: relational_exp LESSER . shift_expression

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    PARENTHESE_L  shift, and go to state 124
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    shift_expression  go to state 293
    additive_exp      go to state 144
    mult_exp          go to state 145
    cast_exp          go to state 146
    unary_exp         go to state 147
    unary_operator    go to state 148
    postfix_exp       go to state 149
    primary_exp       go to state 162
    const_type        go to state 151


State 223

  175 relational_exp: relational_exp GREATER . shift_expression

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    PARENTHESE_L  shift, and go to state 124
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    shift_expression  go to state 294
    additive_exp      go to state 144
    mult_exp          go to state 145
    cast_exp          go to state 146
    unary_exp         go to state 147
    unary_operator    go to state 148
    postfix_exp       go to state 149
    primary_exp       go to state 162
    const_type        go to state 151


State 224

  176 relational_exp: relational_exp LEQUAL . shift_expression

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    PARENTHESE_L  shift, and go to state 124
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    shift_expression  go to state 295
    additive_exp      go to state 144
    mult_exp          go to state 145
    cast_exp          go to state 146
    unary_exp         go to state 147
    unary_operator    go to state 148
    postfix_exp       go to state 149
    primary_exp       go to state 162
    const_type        go to state 151


State 225

  177 relational_exp: relational_exp GEQUAL . shift_expression

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    PARENTHESE_L  shift, and go to state 124
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    shift_expression  go to state 296
    additive_exp      go to state 144
    mult_exp          go to state 145
    cast_exp          go to state 146
    unary_exp         go to state 147
    unary_operator    go to state 148
    postfix_exp       go to state 149
    primary_exp       go to state 162
    const_type        go to state 151


State 226

  179 shift_expression: shift_expression MOVE_L . additive_exp

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    PARENTHESE_L  shift, and go to state 124
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    additive_exp    go to state 297
    mult_exp        go to state 145
    cast_exp        go to state 146
    unary_exp       go to state 147
    unary_operator  go to state 148
    postfix_exp     go to state 149
    primary_exp     go to state 162
    const_type      go to state 151


State 227

  180 shift_expression: shift_expression MOVE_R . additive_exp

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    PARENTHESE_L  shift, and go to state 124
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    additive_exp    go to state 298
    mult_exp        go to state 145
    cast_exp        go to state 146
    unary_exp       go to state 147
    unary_operator  go to state 148
    postfix_exp     go to state 149
    primary_exp     go to state 162
    const_type      go to state 151


State 228

  182 additive_exp: additive_exp ADD . mult_exp

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    PARENTHESE_L  shift, and go to state 124
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    mult_exp        go to state 299
    cast_exp        go to state 146
    unary_exp       go to state 147
    unary_operator  go to state 148
    postfix_exp     go to state 149
    primary_exp     go to state 162
    const_type      go to state 151


State 229

  183 additive_exp: additive_exp SUB . mult_exp

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    PARENTHESE_L  shift, and go to state 124
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    mult_exp        go to state 300
    cast_exp        go to state 146
    unary_exp       go to state 147
    unary_operator  go to state 148
    postfix_exp     go to state 149
    primary_exp     go to state 162
    const_type      go to state 151


State 230

  185 mult_exp: mult_exp MUL . cast_exp

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    PARENTHESE_L  shift, and go to state 124
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    cast_exp        go to state 301
    unary_exp       go to state 147
    unary_operator  go to state 148
    postfix_exp     go to state 149
    primary_exp     go to state 162
    const_type      go to state 151


State 231

  186 mult_exp: mult_exp DIV . cast_exp

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    PARENTHESE_L  shift, and go to state 124
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    cast_exp        go to state 302
    unary_exp       go to state 147
    unary_operator  go to state 148
    postfix_exp     go to state 149
    primary_exp     go to state 162
    const_type      go to state 151


State 232

  187 mult_exp: mult_exp MOD . cast_exp

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    PARENTHESE_L  shift, and go to state 124
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    cast_exp        go to state 303
    unary_exp       go to state 147
    unary_operator  go to state 148
    postfix_exp     go to state 149
    primary_exp     go to state 162
    const_type      go to state 151


State 233

  193 unary_exp: unary_operator cast_exp .

    $default  reduce using rule 193 (unary_exp)


State 234

  206 postfix_exp: postfix_exp DOT . IDENTITY

    IDENTITY  shift, and go to state 304


State 235

  204 postfix_exp: postfix_exp PARENTHESE_L . argument_exp_list PARENTHESE_R
  205            | postfix_exp PARENTHESE_L . PARENTHESE_R

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    PARENTHESE_L  shift, and go to state 124
    PARENTHESE_R  shift, and go to state 305
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    assignment_exp     go to state 306
    conditional_exp    go to state 160
    logical_or_exp     go to state 136
    logical_and_exp    go to state 137
    inclusive_or_exp   go to state 138
    exclusive_or_exp   go to state 139
    and_exp            go to state 140
    equality_exp       go to state 141
    relational_exp     go to state 142
    shift_expression   go to state 143
    additive_exp       go to state 144
    mult_exp           go to state 145
    cast_exp           go to state 146
    unary_exp          go to state 161
    unary_operator     go to state 148
    postfix_exp        go to state 149
    primary_exp        go to state 162
    argument_exp_list  go to state 307
    const_type         go to state 151


State 236

  207 postfix_exp: postfix_exp PELEMENT . IDENTITY

    IDENTITY  shift, and go to state 308


State 237

  208 postfix_exp: postfix_exp POST_ADD .

    $default  reduce using rule 208 (postfix_exp)


State 238

  209 postfix_exp: postfix_exp POST_SUB .

    $default  reduce using rule 209 (postfix_exp)


State 239

  203 postfix_exp: postfix_exp BRACKET_L . exp BRACKET_R

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    PARENTHESE_L  shift, and go to state 124
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    exp               go to state 309
    assignment_exp    go to state 185
    conditional_exp   go to state 160
    logical_or_exp    go to state 136
    logical_and_exp   go to state 137
    inclusive_or_exp  go to state 138
    exclusive_or_exp  go to state 139
    and_exp           go to state 140
    equality_exp      go to state 141
    relational_exp    go to state 142
    shift_expression  go to state 143
    additive_exp      go to state 144
    mult_exp          go to state 145
    cast_exp          go to state 146
    unary_exp         go to state 161
    unary_operator    go to state 148
    postfix_exp       go to state 149
    primary_exp       go to state 162
    const_type        go to state 151


State 240

   67 enumerator: IDENTITY ASSIGN const_exp .

    $default  reduce using rule 67 (enumerator)


State 241

   65 enumerator_list: enumerator_list COMMA enumerator .

    $default  reduce using rule 65 (enumerator_list)


State 242

   61 enum_spec: ENUM IDENTITY BRACE_L enumerator_list BRACE_R .

    $default  reduce using rule 61 (enum_spec)


State 243

   96 initializer_list: initializer .

    $default  reduce using rule 96 (initializer_list)


State 244

   94 initializer: BRACE_L initializer_list . BRACE_R
   95            | BRACE_L initializer_list . COMMA BRACE_R
   97 initializer_list: initializer_list . COMMA initializer

    COMMA    shift, and go to state 310
    BRACE_R  shift, and go to state 311


State 245

  152 assignment_operator: ASSIGN .

    $default  reduce using rule 152 (assignment_operator)


State 246

  153 assignment_operator: ASSIGN_OP .

    $default  reduce using rule 153 (assignment_operator)


State 247

  154 assignment_operator: ASSIGN_SHIFTL .

    $default  reduce using rule 154 (assignment_operator)


State 248

  155 assignment_operator: ASSIGN_SHIFTR .

    $default  reduce using rule 155 (assignment_operator)


State 249

  151 assignment_exp: unary_exp assignment_operator . assignment_exp

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    PARENTHESE_L  shift, and go to state 124
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    assignment_exp    go to state 312
    conditional_exp   go to state 160
    logical_or_exp    go to state 136
    logical_and_exp   go to state 137
    inclusive_or_exp  go to state 138
    exclusive_or_exp  go to state 139
    and_exp           go to state 140
    equality_exp      go to state 141
    relational_exp    go to state 142
    shift_expression  go to state 143
    additive_exp      go to state 144
    mult_exp          go to state 145
    cast_exp          go to state 146
    unary_exp         go to state 161
    unary_operator    go to state 148
    postfix_exp       go to state 149
    primary_exp       go to state 162
    const_type        go to state 151


State 250

   60 struct_declarator: COLON const_exp .

    $default  reduce using rule 60 (struct_declarator)


State 251

   57 struct_declarator_list: struct_declarator_list COMMA . struct_declarator

    AUTO          shift, and go to state 1
    CHAR          shift, and go to state 2
    COLON         shift, and go to state 168
    CONST         shift, and go to state 3
    DOUBLE        shift, and go to state 4
    ENUM          shift, and go to state 5
    EXTERN        shift, and go to state 6
    FLOAT         shift, and go to state 7
    INT           shift, and go to state 8
    LONG          shift, and go to state 9
    REGISTER      shift, and go to state 10
    SHORT         shift, and go to state 11
    SIGNED        shift, and go to state 12
    STATIC        shift, and go to state 13
    STRUCT        shift, and go to state 14
    TYPEDEF       shift, and go to state 15
    UNION         shift, and go to state 16
    UNSIGNED      shift, and go to state 17
    VOID          shift, and go to state 18
    VOLATILE      shift, and go to state 19
    MUL           shift, and go to state 20
    PARENTHESE_L  shift, and go to state 21
    IDENTITY      shift, and go to state 22

    decl_specs            go to state 43
    storage_class_spec    go to state 28
    type_spec             go to state 29
    type_qualifier        go to state 30
    struct_or_union_spec  go to state 31
    struct_or_union       go to state 32
    struct_declarator     go to state 313
    enum_spec             go to state 33
    declarator            go to state 171
    direct_declarator     go to state 35
    pointer               go to state 36
    typedef_name          go to state 37


State 252

   51 struct_decl: spec_qualifier_list struct_declarator_list SEMI .

    $default  reduce using rule 51 (struct_decl)


State 253

   59 struct_declarator: declarator COLON . const_exp

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    PARENTHESE_L  shift, and go to state 124
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    conditional_exp   go to state 134
    const_exp         go to state 314
    logical_or_exp    go to state 136
    logical_and_exp   go to state 137
    inclusive_or_exp  go to state 138
    exclusive_or_exp  go to state 139
    and_exp           go to state 140
    equality_exp      go to state 141
    relational_exp    go to state 142
    shift_expression  go to state 143
    additive_exp      go to state 144
    mult_exp          go to state 145
    cast_exp          go to state 146
    unary_exp         go to state 147
    unary_operator    go to state 148
    postfix_exp       go to state 149
    primary_exp       go to state 150
    const_type        go to state 151


State 254

   40 struct_or_union_spec: struct_or_union IDENTITY BRACE_L struct_decl_list BRACE_R .

    $default  reduce using rule 40 (struct_or_union_spec)


State 255

  120 labeled_stat: CASE const_exp COLON . stat

    BREAK     shift, and go to state 85
    CASE      shift, and go to state 86
    COLON     shift, and go to state 87
    CONTINUE  shift, and go to state 88
    DEFAULT   shift, and go to state 89
    DO        shift, and go to state 90
    FOR       shift, and go to state 91
    GOTO      shift, and go to state 92
    IF        shift, and go to state 93
    RETURN    shift, and go to state 94
    SWITCH    shift, and go to state 95
    WHILE     shift, and go to state 96
    SEMI      shift, and go to state 97
    BRACE_L   shift, and go to state 58
    IDENTITY  shift, and go to state 178

    stat            go to state 315
    labeled_stat    go to state 102
    exp_stat        go to state 103
    compound_stat   go to state 104
    selection_stat  go to state 106
    iteration_stat  go to state 107
    jump_stat       go to state 108


State 256

  121 labeled_stat: DEFAULT COLON stat .

    $default  reduce using rule 121 (labeled_stat)


State 257

  134 iteration_stat: DO stat WHILE . PARENTHESE_L exp PARENTHESE_R SEMI

    PARENTHESE_L  shift, and go to state 316


State 258

  139 iteration_stat: FOR PARENTHESE_L SEMI . exp SEMI exp PARENTHESE_R stat
  140               | FOR PARENTHESE_L SEMI . exp SEMI PARENTHESE_R stat
  141               | FOR PARENTHESE_L SEMI . SEMI exp PARENTHESE_R stat
  142               | FOR PARENTHESE_L SEMI . SEMI PARENTHESE_R stat

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    SEMI          shift, and go to state 317
    PARENTHESE_L  shift, and go to state 124
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    exp               go to state 318
    assignment_exp    go to state 185
    conditional_exp   go to state 160
    logical_or_exp    go to state 136
    logical_and_exp   go to state 137
    inclusive_or_exp  go to state 138
    exclusive_or_exp  go to state 139
    and_exp           go to state 140
    equality_exp      go to state 141
    relational_exp    go to state 142
    shift_expression  go to state 143
    additive_exp      go to state 144
    mult_exp          go to state 145
    cast_exp          go to state 146
    unary_exp         go to state 161
    unary_operator    go to state 148
    postfix_exp       go to state 149
    primary_exp       go to state 162
    const_type        go to state 151


State 259

  135 iteration_stat: FOR PARENTHESE_L exp . SEMI exp SEMI exp PARENTHESE_R stat
  136               | FOR PARENTHESE_L exp . SEMI exp SEMI PARENTHESE_R stat
  137               | FOR PARENTHESE_L exp . SEMI SEMI exp PARENTHESE_R stat
  138               | FOR PARENTHESE_L exp . SEMI SEMI PARENTHESE_R stat
  149 exp: exp . COMMA assignment_exp

    COMMA  shift, and go to state 262
    SEMI   shift, and go to state 319


State 260

  143 jump_stat: GOTO IDENTITY SEMI .

    $default  reduce using rule 143 (jump_stat)


State 261

  130 selection_stat: IF PARENTHESE_L exp . PARENTHESE_R stat
  131               | IF PARENTHESE_L exp . PARENTHESE_R stat ELSE stat
  149 exp: exp . COMMA assignment_exp

    COMMA         shift, and go to state 262
    PARENTHESE_R  shift, and go to state 320


State 262

  149 exp: exp COMMA . assignment_exp

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    PARENTHESE_L  shift, and go to state 124
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    assignment_exp    go to state 321
    conditional_exp   go to state 160
    logical_or_exp    go to state 136
    logical_and_exp   go to state 137
    inclusive_or_exp  go to state 138
    exclusive_or_exp  go to state 139
    and_exp           go to state 140
    equality_exp      go to state 141
    relational_exp    go to state 142
    shift_expression  go to state 143
    additive_exp      go to state 144
    mult_exp          go to state 145
    cast_exp          go to state 146
    unary_exp         go to state 161
    unary_operator    go to state 148
    postfix_exp       go to state 149
    primary_exp       go to state 162
    const_type        go to state 151


State 263

  146 jump_stat: RETURN exp SEMI .

    $default  reduce using rule 146 (jump_stat)


State 264

  132 selection_stat: SWITCH PARENTHESE_L exp . PARENTHESE_R stat
  149 exp: exp . COMMA assignment_exp

    COMMA         shift, and go to state 262
    PARENTHESE_R  shift, and go to state 322


State 265

  133 iteration_stat: WHILE PARENTHESE_L exp . PARENTHESE_R stat
  149 exp: exp . COMMA assignment_exp

    COMMA         shift, and go to state 262
    PARENTHESE_R  shift, and go to state 323


State 266

  119 labeled_stat: IDENTITY COLON stat .

    $default  reduce using rule 119 (labeled_stat)


State 267

  124 compound_stat: BRACE_L decl_list stat_list BRACE_R .

    $default  reduce using rule 124 (compound_stat)


State 268

  103 direct_abstract_declarator: PARENTHESE_L abstract_declarator . PARENTHESE_R

    PARENTHESE_R  shift, and go to state 324


State 269

  107 direct_abstract_declarator: BRACKET_L BRACKET_R .

    $default  reduce using rule 107 (direct_abstract_declarator)


State 270

  105 direct_abstract_declarator: BRACKET_L const_exp . BRACKET_R

    BRACKET_R  shift, and go to state 325


State 271

  111 direct_abstract_declarator: BRACE_L BRACE_R .

    $default  reduce using rule 111 (direct_abstract_declarator)


State 272

  109 direct_abstract_declarator: BRACE_L param_type_list . BRACE_R

    BRACE_R  shift, and go to state 326


State 273

  101 abstract_declarator: pointer direct_abstract_declarator .
  104 direct_abstract_declarator: direct_abstract_declarator . BRACKET_L const_exp BRACKET_R
  106                           | direct_abstract_declarator . BRACKET_L BRACKET_R
  108                           | direct_abstract_declarator . BRACE_L param_type_list BRACE_R
  110                           | direct_abstract_declarator . BRACE_L BRACE_R

    BRACKET_L  shift, and go to state 274
    BRACE_L    shift, and go to state 275

    $default  reduce using rule 101 (abstract_declarator)


State 274

  104 direct_abstract_declarator: direct_abstract_declarator BRACKET_L . const_exp BRACKET_R
  106                           | direct_abstract_declarator BRACKET_L . BRACKET_R

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    PARENTHESE_L  shift, and go to state 124
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    BRACKET_R     shift, and go to state 327
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    conditional_exp   go to state 134
    const_exp         go to state 328
    logical_or_exp    go to state 136
    logical_and_exp   go to state 137
    inclusive_or_exp  go to state 138
    exclusive_or_exp  go to state 139
    and_exp           go to state 140
    equality_exp      go to state 141
    relational_exp    go to state 142
    shift_expression  go to state 143
    additive_exp      go to state 144
    mult_exp          go to state 145
    cast_exp          go to state 146
    unary_exp         go to state 147
    unary_operator    go to state 148
    postfix_exp       go to state 149
    primary_exp       go to state 150
    const_type        go to state 151


State 275

  108 direct_abstract_declarator: direct_abstract_declarator BRACE_L . param_type_list BRACE_R
  110                           | direct_abstract_declarator BRACE_L . BRACE_R

    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    REGISTER  shift, and go to state 10
    SHORT     shift, and go to state 11
    SIGNED    shift, and go to state 12
    STATIC    shift, and go to state 13
    STRUCT    shift, and go to state 14
    TYPEDEF   shift, and go to state 15
    UNION     shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    VOID      shift, and go to state 18
    VOLATILE  shift, and go to state 19
    BRACE_R   shift, and go to state 329
    IDENTITY  shift, and go to state 51

    decl_specs            go to state 114
    storage_class_spec    go to state 28
    type_spec             go to state 29
    type_qualifier        go to state 30
    struct_or_union_spec  go to state 31
    struct_or_union       go to state 32
    enum_spec             go to state 33
    param_type_list       go to state 330
    param_list            go to state 116
    param_decl            go to state 117
    typedef_name          go to state 37


State 276

   85 param_type_list: param_list COMMA ELLIPSIS .

    $default  reduce using rule 85 (param_type_list)


State 277

   87 param_list: param_list COMMA param_decl .

    $default  reduce using rule 87 (param_list)


State 278

   92 id_list: id_list COMMA IDENTITY .

    $default  reduce using rule 92 (id_list)


State 279

  195 unary_exp: SIZEOF PARENTHESE_L type_name . PARENTHESE_R

    PARENTHESE_R  shift, and go to state 331


State 280

  103 direct_abstract_declarator: PARENTHESE_L . abstract_declarator PARENTHESE_R

    MUL           shift, and go to state 20
    PARENTHESE_L  shift, and go to state 280
    BRACKET_L     shift, and go to state 194
    BRACE_L       shift, and go to state 195

    pointer                     go to state 281
    abstract_declarator         go to state 268
    direct_abstract_declarator  go to state 199


State 281

  100 abstract_declarator: pointer .
  101                    | pointer . direct_abstract_declarator

    PARENTHESE_L  shift, and go to state 280
    BRACKET_L     shift, and go to state 194
    BRACE_L       shift, and go to state 195

    $default  reduce using rule 100 (abstract_declarator)

    direct_abstract_declarator  go to state 273


State 282

   98 type_name: spec_qualifier_list abstract_declarator .

    $default  reduce using rule 98 (type_name)


State 283

  189 cast_exp: PARENTHESE_L type_name PARENTHESE_R . cast_exp

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    PARENTHESE_L  shift, and go to state 124
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    cast_exp        go to state 332
    unary_exp       go to state 147
    unary_operator  go to state 148
    postfix_exp     go to state 149
    primary_exp     go to state 162
    const_type      go to state 151


State 284

  213 primary_exp: PARENTHESE_L exp PARENTHESE_R .

    $default  reduce using rule 213 (primary_exp)


State 285

  161 logical_or_exp: logical_or_exp OR logical_and_exp .
  163 logical_and_exp: logical_and_exp . AND inclusive_or_exp

    AND  shift, and go to state 216

    $default  reduce using rule 161 (logical_or_exp)


State 286

  149 exp: exp . COMMA assignment_exp
  157 conditional_exp: logical_or_exp QUES exp . COLON

    COLON  shift, and go to state 333
    COMMA  shift, and go to state 262


State 287

  163 logical_and_exp: logical_and_exp AND inclusive_or_exp .
  165 inclusive_or_exp: inclusive_or_exp . OR_OP exclusive_or_exp

    OR_OP  shift, and go to state 217

    $default  reduce using rule 163 (logical_and_exp)


State 288

  165 inclusive_or_exp: inclusive_or_exp OR_OP exclusive_or_exp .
  167 exclusive_or_exp: exclusive_or_exp . XOR_OP and_exp

    XOR_OP  shift, and go to state 218

    $default  reduce using rule 165 (inclusive_or_exp)


State 289

  167 exclusive_or_exp: exclusive_or_exp XOR_OP and_exp .
  169 and_exp: and_exp . AND_OP equality_exp

    AND_OP  shift, and go to state 219

    $default  reduce using rule 167 (exclusive_or_exp)


State 290

  169 and_exp: and_exp AND_OP equality_exp .
  171 equality_exp: equality_exp . EQUAL relational_exp
  172             | equality_exp . NOT_EQUAL relational_exp

    EQUAL      shift, and go to state 220
    NOT_EQUAL  shift, and go to state 221

    $default  reduce using rule 169 (and_exp)


State 291

  171 equality_exp: equality_exp EQUAL relational_exp .
  174 relational_exp: relational_exp . LESSER shift_expression
  175               | relational_exp . GREATER shift_expression
  176               | relational_exp . LEQUAL shift_expression
  177               | relational_exp . GEQUAL shift_expression

    LESSER   shift, and go to state 222
    GREATER  shift, and go to state 223
    LEQUAL   shift, and go to state 224
    GEQUAL   shift, and go to state 225

    $default  reduce using rule 171 (equality_exp)


State 292

  172 equality_exp: equality_exp NOT_EQUAL relational_exp .
  174 relational_exp: relational_exp . LESSER shift_expression
  175               | relational_exp . GREATER shift_expression
  176               | relational_exp . LEQUAL shift_expression
  177               | relational_exp . GEQUAL shift_expression

    LESSER   shift, and go to state 222
    GREATER  shift, and go to state 223
    LEQUAL   shift, and go to state 224
    GEQUAL   shift, and go to state 225

    $default  reduce using rule 172 (equality_exp)


State 293

  174 relational_exp: relational_exp LESSER shift_expression .
  179 shift_expression: shift_expression . MOVE_L additive_exp
  180                 | shift_expression . MOVE_R additive_exp

    MOVE_L  shift, and go to state 226
    MOVE_R  shift, and go to state 227

    $default  reduce using rule 174 (relational_exp)


State 294

  175 relational_exp: relational_exp GREATER shift_expression .
  179 shift_expression: shift_expression . MOVE_L additive_exp
  180                 | shift_expression . MOVE_R additive_exp

    MOVE_L  shift, and go to state 226
    MOVE_R  shift, and go to state 227

    $default  reduce using rule 175 (relational_exp)


State 295

  176 relational_exp: relational_exp LEQUAL shift_expression .
  179 shift_expression: shift_expression . MOVE_L additive_exp
  180                 | shift_expression . MOVE_R additive_exp

    MOVE_L  shift, and go to state 226
    MOVE_R  shift, and go to state 227

    $default  reduce using rule 176 (relational_exp)


State 296

  177 relational_exp: relational_exp GEQUAL shift_expression .
  179 shift_expression: shift_expression . MOVE_L additive_exp
  180                 | shift_expression . MOVE_R additive_exp

    MOVE_L  shift, and go to state 226
    MOVE_R  shift, and go to state 227

    $default  reduce using rule 177 (relational_exp)


State 297

  179 shift_expression: shift_expression MOVE_L additive_exp .
  182 additive_exp: additive_exp . ADD mult_exp
  183             | additive_exp . SUB mult_exp

    ADD  shift, and go to state 228
    SUB  shift, and go to state 229

    $default  reduce using rule 179 (shift_expression)


State 298

  180 shift_expression: shift_expression MOVE_R additive_exp .
  182 additive_exp: additive_exp . ADD mult_exp
  183             | additive_exp . SUB mult_exp

    ADD  shift, and go to state 228
    SUB  shift, and go to state 229

    $default  reduce using rule 180 (shift_expression)


State 299

  182 additive_exp: additive_exp ADD mult_exp .
  185 mult_exp: mult_exp . MUL cast_exp
  186         | mult_exp . DIV cast_exp
  187         | mult_exp . MOD cast_exp

    MUL  shift, and go to state 230
    DIV  shift, and go to state 231
    MOD  shift, and go to state 232

    $default  reduce using rule 182 (additive_exp)


State 300

  183 additive_exp: additive_exp SUB mult_exp .
  185 mult_exp: mult_exp . MUL cast_exp
  186         | mult_exp . DIV cast_exp
  187         | mult_exp . MOD cast_exp

    MUL  shift, and go to state 230
    DIV  shift, and go to state 231
    MOD  shift, and go to state 232

    $default  reduce using rule 183 (additive_exp)


State 301

  185 mult_exp: mult_exp MUL cast_exp .

    $default  reduce using rule 185 (mult_exp)


State 302

  186 mult_exp: mult_exp DIV cast_exp .

    $default  reduce using rule 186 (mult_exp)


State 303

  187 mult_exp: mult_exp MOD cast_exp .

    $default  reduce using rule 187 (mult_exp)


State 304

  206 postfix_exp: postfix_exp DOT IDENTITY .

    $default  reduce using rule 206 (postfix_exp)


State 305

  205 postfix_exp: postfix_exp PARENTHESE_L PARENTHESE_R .

    $default  reduce using rule 205 (postfix_exp)


State 306

  214 argument_exp_list: assignment_exp .

    $default  reduce using rule 214 (argument_exp_list)


State 307

  204 postfix_exp: postfix_exp PARENTHESE_L argument_exp_list . PARENTHESE_R
  215 argument_exp_list: argument_exp_list . COMMA assignment_exp

    COMMA         shift, and go to state 334
    PARENTHESE_R  shift, and go to state 335


State 308

  207 postfix_exp: postfix_exp PELEMENT IDENTITY .

    $default  reduce using rule 207 (postfix_exp)


State 309

  149 exp: exp . COMMA assignment_exp
  203 postfix_exp: postfix_exp BRACKET_L exp . BRACKET_R

    COMMA      shift, and go to state 262
    BRACKET_R  shift, and go to state 336


State 310

   95 initializer: BRACE_L initializer_list COMMA . BRACE_R
   97 initializer_list: initializer_list COMMA . initializer

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    PARENTHESE_L  shift, and go to state 124
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    BRACE_L       shift, and go to state 157
    BRACE_R       shift, and go to state 337
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    initializer       go to state 338
    assignment_exp    go to state 159
    conditional_exp   go to state 160
    logical_or_exp    go to state 136
    logical_and_exp   go to state 137
    inclusive_or_exp  go to state 138
    exclusive_or_exp  go to state 139
    and_exp           go to state 140
    equality_exp      go to state 141
    relational_exp    go to state 142
    shift_expression  go to state 143
    additive_exp      go to state 144
    mult_exp          go to state 145
    cast_exp          go to state 146
    unary_exp         go to state 161
    unary_operator    go to state 148
    postfix_exp       go to state 149
    primary_exp       go to state 162
    const_type        go to state 151


State 311

   94 initializer: BRACE_L initializer_list BRACE_R .

    $default  reduce using rule 94 (initializer)


State 312

  151 assignment_exp: unary_exp assignment_operator assignment_exp .

    $default  reduce using rule 151 (assignment_exp)


State 313

   57 struct_declarator_list: struct_declarator_list COMMA struct_declarator .

    $default  reduce using rule 57 (struct_declarator_list)


State 314

   59 struct_declarator: declarator COLON const_exp .

    $default  reduce using rule 59 (struct_declarator)


State 315

  120 labeled_stat: CASE const_exp COLON stat .

    $default  reduce using rule 120 (labeled_stat)


State 316

  134 iteration_stat: DO stat WHILE PARENTHESE_L . exp PARENTHESE_R SEMI

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    PARENTHESE_L  shift, and go to state 124
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    exp               go to state 339
    assignment_exp    go to state 185
    conditional_exp   go to state 160
    logical_or_exp    go to state 136
    logical_and_exp   go to state 137
    inclusive_or_exp  go to state 138
    exclusive_or_exp  go to state 139
    and_exp           go to state 140
    equality_exp      go to state 141
    relational_exp    go to state 142
    shift_expression  go to state 143
    additive_exp      go to state 144
    mult_exp          go to state 145
    cast_exp          go to state 146
    unary_exp         go to state 161
    unary_operator    go to state 148
    postfix_exp       go to state 149
    primary_exp       go to state 162
    const_type        go to state 151


State 317

  141 iteration_stat: FOR PARENTHESE_L SEMI SEMI . exp PARENTHESE_R stat
  142               | FOR PARENTHESE_L SEMI SEMI . PARENTHESE_R stat

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    PARENTHESE_L  shift, and go to state 124
    PARENTHESE_R  shift, and go to state 340
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    exp               go to state 341
    assignment_exp    go to state 185
    conditional_exp   go to state 160
    logical_or_exp    go to state 136
    logical_and_exp   go to state 137
    inclusive_or_exp  go to state 138
    exclusive_or_exp  go to state 139
    and_exp           go to state 140
    equality_exp      go to state 141
    relational_exp    go to state 142
    shift_expression  go to state 143
    additive_exp      go to state 144
    mult_exp          go to state 145
    cast_exp          go to state 146
    unary_exp         go to state 161
    unary_operator    go to state 148
    postfix_exp       go to state 149
    primary_exp       go to state 162
    const_type        go to state 151


State 318

  139 iteration_stat: FOR PARENTHESE_L SEMI exp . SEMI exp PARENTHESE_R stat
  140               | FOR PARENTHESE_L SEMI exp . SEMI PARENTHESE_R stat
  149 exp: exp . COMMA assignment_exp

    COMMA  shift, and go to state 262
    SEMI   shift, and go to state 342


State 319

  135 iteration_stat: FOR PARENTHESE_L exp SEMI . exp SEMI exp PARENTHESE_R stat
  136               | FOR PARENTHESE_L exp SEMI . exp SEMI PARENTHESE_R stat
  137               | FOR PARENTHESE_L exp SEMI . SEMI exp PARENTHESE_R stat
  138               | FOR PARENTHESE_L exp SEMI . SEMI PARENTHESE_R stat

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    SEMI          shift, and go to state 343
    PARENTHESE_L  shift, and go to state 124
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    exp               go to state 344
    assignment_exp    go to state 185
    conditional_exp   go to state 160
    logical_or_exp    go to state 136
    logical_and_exp   go to state 137
    inclusive_or_exp  go to state 138
    exclusive_or_exp  go to state 139
    and_exp           go to state 140
    equality_exp      go to state 141
    relational_exp    go to state 142
    shift_expression  go to state 143
    additive_exp      go to state 144
    mult_exp          go to state 145
    cast_exp          go to state 146
    unary_exp         go to state 161
    unary_operator    go to state 148
    postfix_exp       go to state 149
    primary_exp       go to state 162
    const_type        go to state 151


State 320

  130 selection_stat: IF PARENTHESE_L exp PARENTHESE_R . stat
  131               | IF PARENTHESE_L exp PARENTHESE_R . stat ELSE stat

    BREAK     shift, and go to state 85
    CASE      shift, and go to state 86
    COLON     shift, and go to state 87
    CONTINUE  shift, and go to state 88
    DEFAULT   shift, and go to state 89
    DO        shift, and go to state 90
    FOR       shift, and go to state 91
    GOTO      shift, and go to state 92
    IF        shift, and go to state 93
    RETURN    shift, and go to state 94
    SWITCH    shift, and go to state 95
    WHILE     shift, and go to state 96
    SEMI      shift, and go to state 97
    BRACE_L   shift, and go to state 58
    IDENTITY  shift, and go to state 178

    stat            go to state 345
    labeled_stat    go to state 102
    exp_stat        go to state 103
    compound_stat   go to state 104
    selection_stat  go to state 106
    iteration_stat  go to state 107
    jump_stat       go to state 108


State 321

  149 exp: exp COMMA assignment_exp .

    $default  reduce using rule 149 (exp)


State 322

  132 selection_stat: SWITCH PARENTHESE_L exp PARENTHESE_R . stat

    BREAK     shift, and go to state 85
    CASE      shift, and go to state 86
    COLON     shift, and go to state 87
    CONTINUE  shift, and go to state 88
    DEFAULT   shift, and go to state 89
    DO        shift, and go to state 90
    FOR       shift, and go to state 91
    GOTO      shift, and go to state 92
    IF        shift, and go to state 93
    RETURN    shift, and go to state 94
    SWITCH    shift, and go to state 95
    WHILE     shift, and go to state 96
    SEMI      shift, and go to state 97
    BRACE_L   shift, and go to state 58
    IDENTITY  shift, and go to state 178

    stat            go to state 346
    labeled_stat    go to state 102
    exp_stat        go to state 103
    compound_stat   go to state 104
    selection_stat  go to state 106
    iteration_stat  go to state 107
    jump_stat       go to state 108


State 323

  133 iteration_stat: WHILE PARENTHESE_L exp PARENTHESE_R . stat

    BREAK     shift, and go to state 85
    CASE      shift, and go to state 86
    COLON     shift, and go to state 87
    CONTINUE  shift, and go to state 88
    DEFAULT   shift, and go to state 89
    DO        shift, and go to state 90
    FOR       shift, and go to state 91
    GOTO      shift, and go to state 92
    IF        shift, and go to state 93
    RETURN    shift, and go to state 94
    SWITCH    shift, and go to state 95
    WHILE     shift, and go to state 96
    SEMI      shift, and go to state 97
    BRACE_L   shift, and go to state 58
    IDENTITY  shift, and go to state 178

    stat            go to state 347
    labeled_stat    go to state 102
    exp_stat        go to state 103
    compound_stat   go to state 104
    selection_stat  go to state 106
    iteration_stat  go to state 107
    jump_stat       go to state 108


State 324

  103 direct_abstract_declarator: PARENTHESE_L abstract_declarator PARENTHESE_R .

    $default  reduce using rule 103 (direct_abstract_declarator)


State 325

  105 direct_abstract_declarator: BRACKET_L const_exp BRACKET_R .

    $default  reduce using rule 105 (direct_abstract_declarator)


State 326

  109 direct_abstract_declarator: BRACE_L param_type_list BRACE_R .

    $default  reduce using rule 109 (direct_abstract_declarator)


State 327

  106 direct_abstract_declarator: direct_abstract_declarator BRACKET_L BRACKET_R .

    $default  reduce using rule 106 (direct_abstract_declarator)


State 328

  104 direct_abstract_declarator: direct_abstract_declarator BRACKET_L const_exp . BRACKET_R

    BRACKET_R  shift, and go to state 348


State 329

  110 direct_abstract_declarator: direct_abstract_declarator BRACE_L BRACE_R .

    $default  reduce using rule 110 (direct_abstract_declarator)


State 330

  108 direct_abstract_declarator: direct_abstract_declarator BRACE_L param_type_list . BRACE_R

    BRACE_R  shift, and go to state 349


State 331

  195 unary_exp: SIZEOF PARENTHESE_L type_name PARENTHESE_R .

    $default  reduce using rule 195 (unary_exp)


State 332

  189 cast_exp: PARENTHESE_L type_name PARENTHESE_R cast_exp .

    $default  reduce using rule 189 (cast_exp)


State 333

  157 conditional_exp: logical_or_exp QUES exp COLON .

    $default  reduce using rule 157 (conditional_exp)


State 334

  215 argument_exp_list: argument_exp_list COMMA . assignment_exp

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    PARENTHESE_L  shift, and go to state 124
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    assignment_exp    go to state 350
    conditional_exp   go to state 160
    logical_or_exp    go to state 136
    logical_and_exp   go to state 137
    inclusive_or_exp  go to state 138
    exclusive_or_exp  go to state 139
    and_exp           go to state 140
    equality_exp      go to state 141
    relational_exp    go to state 142
    shift_expression  go to state 143
    additive_exp      go to state 144
    mult_exp          go to state 145
    cast_exp          go to state 146
    unary_exp         go to state 161
    unary_operator    go to state 148
    postfix_exp       go to state 149
    primary_exp       go to state 162
    const_type        go to state 151


State 335

  204 postfix_exp: postfix_exp PARENTHESE_L argument_exp_list PARENTHESE_R .

    $default  reduce using rule 204 (postfix_exp)


State 336

  203 postfix_exp: postfix_exp BRACKET_L exp BRACKET_R .

    $default  reduce using rule 203 (postfix_exp)


State 337

   95 initializer: BRACE_L initializer_list COMMA BRACE_R .

    $default  reduce using rule 95 (initializer)


State 338

   97 initializer_list: initializer_list COMMA initializer .

    $default  reduce using rule 97 (initializer_list)


State 339

  134 iteration_stat: DO stat WHILE PARENTHESE_L exp . PARENTHESE_R SEMI
  149 exp: exp . COMMA assignment_exp

    COMMA         shift, and go to state 262
    PARENTHESE_R  shift, and go to state 351


State 340

  142 iteration_stat: FOR PARENTHESE_L SEMI SEMI PARENTHESE_R . stat

    BREAK     shift, and go to state 85
    CASE      shift, and go to state 86
    COLON     shift, and go to state 87
    CONTINUE  shift, and go to state 88
    DEFAULT   shift, and go to state 89
    DO        shift, and go to state 90
    FOR       shift, and go to state 91
    GOTO      shift, and go to state 92
    IF        shift, and go to state 93
    RETURN    shift, and go to state 94
    SWITCH    shift, and go to state 95
    WHILE     shift, and go to state 96
    SEMI      shift, and go to state 97
    BRACE_L   shift, and go to state 58
    IDENTITY  shift, and go to state 178

    stat            go to state 352
    labeled_stat    go to state 102
    exp_stat        go to state 103
    compound_stat   go to state 104
    selection_stat  go to state 106
    iteration_stat  go to state 107
    jump_stat       go to state 108


State 341

  141 iteration_stat: FOR PARENTHESE_L SEMI SEMI exp . PARENTHESE_R stat
  149 exp: exp . COMMA assignment_exp

    COMMA         shift, and go to state 262
    PARENTHESE_R  shift, and go to state 353


State 342

  139 iteration_stat: FOR PARENTHESE_L SEMI exp SEMI . exp PARENTHESE_R stat
  140               | FOR PARENTHESE_L SEMI exp SEMI . PARENTHESE_R stat

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    PARENTHESE_L  shift, and go to state 124
    PARENTHESE_R  shift, and go to state 354
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    exp               go to state 355
    assignment_exp    go to state 185
    conditional_exp   go to state 160
    logical_or_exp    go to state 136
    logical_and_exp   go to state 137
    inclusive_or_exp  go to state 138
    exclusive_or_exp  go to state 139
    and_exp           go to state 140
    equality_exp      go to state 141
    relational_exp    go to state 142
    shift_expression  go to state 143
    additive_exp      go to state 144
    mult_exp          go to state 145
    cast_exp          go to state 146
    unary_exp         go to state 161
    unary_operator    go to state 148
    postfix_exp       go to state 149
    primary_exp       go to state 162
    const_type        go to state 151


State 343

  137 iteration_stat: FOR PARENTHESE_L exp SEMI SEMI . exp PARENTHESE_R stat
  138               | FOR PARENTHESE_L exp SEMI SEMI . PARENTHESE_R stat

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    PARENTHESE_L  shift, and go to state 124
    PARENTHESE_R  shift, and go to state 356
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    exp               go to state 357
    assignment_exp    go to state 185
    conditional_exp   go to state 160
    logical_or_exp    go to state 136
    logical_and_exp   go to state 137
    inclusive_or_exp  go to state 138
    exclusive_or_exp  go to state 139
    and_exp           go to state 140
    equality_exp      go to state 141
    relational_exp    go to state 142
    shift_expression  go to state 143
    additive_exp      go to state 144
    mult_exp          go to state 145
    cast_exp          go to state 146
    unary_exp         go to state 161
    unary_operator    go to state 148
    postfix_exp       go to state 149
    primary_exp       go to state 162
    const_type        go to state 151


State 344

  135 iteration_stat: FOR PARENTHESE_L exp SEMI exp . SEMI exp PARENTHESE_R stat
  136               | FOR PARENTHESE_L exp SEMI exp . SEMI PARENTHESE_R stat
  149 exp: exp . COMMA assignment_exp

    COMMA  shift, and go to state 262
    SEMI   shift, and go to state 358


State 345

  130 selection_stat: IF PARENTHESE_L exp PARENTHESE_R stat .
  131               | IF PARENTHESE_L exp PARENTHESE_R stat . ELSE stat

    ELSE  shift, and go to state 359

    ELSE      [reduce using rule 130 (selection_stat)]
    $default  reduce using rule 130 (selection_stat)


State 346

  132 selection_stat: SWITCH PARENTHESE_L exp PARENTHESE_R stat .

    $default  reduce using rule 132 (selection_stat)


State 347

  133 iteration_stat: WHILE PARENTHESE_L exp PARENTHESE_R stat .

    $default  reduce using rule 133 (iteration_stat)


State 348

  104 direct_abstract_declarator: direct_abstract_declarator BRACKET_L const_exp BRACKET_R .

    $default  reduce using rule 104 (direct_abstract_declarator)


State 349

  108 direct_abstract_declarator: direct_abstract_declarator BRACE_L param_type_list BRACE_R .

    $default  reduce using rule 108 (direct_abstract_declarator)


State 350

  215 argument_exp_list: argument_exp_list COMMA assignment_exp .

    $default  reduce using rule 215 (argument_exp_list)


State 351

  134 iteration_stat: DO stat WHILE PARENTHESE_L exp PARENTHESE_R . SEMI

    SEMI  shift, and go to state 360


State 352

  142 iteration_stat: FOR PARENTHESE_L SEMI SEMI PARENTHESE_R stat .

    $default  reduce using rule 142 (iteration_stat)


State 353

  141 iteration_stat: FOR PARENTHESE_L SEMI SEMI exp PARENTHESE_R . stat

    BREAK     shift, and go to state 85
    CASE      shift, and go to state 86
    COLON     shift, and go to state 87
    CONTINUE  shift, and go to state 88
    DEFAULT   shift, and go to state 89
    DO        shift, and go to state 90
    FOR       shift, and go to state 91
    GOTO      shift, and go to state 92
    IF        shift, and go to state 93
    RETURN    shift, and go to state 94
    SWITCH    shift, and go to state 95
    WHILE     shift, and go to state 96
    SEMI      shift, and go to state 97
    BRACE_L   shift, and go to state 58
    IDENTITY  shift, and go to state 178

    stat            go to state 361
    labeled_stat    go to state 102
    exp_stat        go to state 103
    compound_stat   go to state 104
    selection_stat  go to state 106
    iteration_stat  go to state 107
    jump_stat       go to state 108


State 354

  140 iteration_stat: FOR PARENTHESE_L SEMI exp SEMI PARENTHESE_R . stat

    BREAK     shift, and go to state 85
    CASE      shift, and go to state 86
    COLON     shift, and go to state 87
    CONTINUE  shift, and go to state 88
    DEFAULT   shift, and go to state 89
    DO        shift, and go to state 90
    FOR       shift, and go to state 91
    GOTO      shift, and go to state 92
    IF        shift, and go to state 93
    RETURN    shift, and go to state 94
    SWITCH    shift, and go to state 95
    WHILE     shift, and go to state 96
    SEMI      shift, and go to state 97
    BRACE_L   shift, and go to state 58
    IDENTITY  shift, and go to state 178

    stat            go to state 362
    labeled_stat    go to state 102
    exp_stat        go to state 103
    compound_stat   go to state 104
    selection_stat  go to state 106
    iteration_stat  go to state 107
    jump_stat       go to state 108


State 355

  139 iteration_stat: FOR PARENTHESE_L SEMI exp SEMI exp . PARENTHESE_R stat
  149 exp: exp . COMMA assignment_exp

    COMMA         shift, and go to state 262
    PARENTHESE_R  shift, and go to state 363


State 356

  138 iteration_stat: FOR PARENTHESE_L exp SEMI SEMI PARENTHESE_R . stat

    BREAK     shift, and go to state 85
    CASE      shift, and go to state 86
    COLON     shift, and go to state 87
    CONTINUE  shift, and go to state 88
    DEFAULT   shift, and go to state 89
    DO        shift, and go to state 90
    FOR       shift, and go to state 91
    GOTO      shift, and go to state 92
    IF        shift, and go to state 93
    RETURN    shift, and go to state 94
    SWITCH    shift, and go to state 95
    WHILE     shift, and go to state 96
    SEMI      shift, and go to state 97
    BRACE_L   shift, and go to state 58
    IDENTITY  shift, and go to state 178

    stat            go to state 364
    labeled_stat    go to state 102
    exp_stat        go to state 103
    compound_stat   go to state 104
    selection_stat  go to state 106
    iteration_stat  go to state 107
    jump_stat       go to state 108


State 357

  137 iteration_stat: FOR PARENTHESE_L exp SEMI SEMI exp . PARENTHESE_R stat
  149 exp: exp . COMMA assignment_exp

    COMMA         shift, and go to state 262
    PARENTHESE_R  shift, and go to state 365


State 358

  135 iteration_stat: FOR PARENTHESE_L exp SEMI exp SEMI . exp PARENTHESE_R stat
  136               | FOR PARENTHESE_L exp SEMI exp SEMI . PARENTHESE_R stat

    SIZEOF        shift, and go to state 119
    ADD           shift, and go to state 120
    SUB           shift, and go to state 121
    MUL           shift, and go to state 122
    NEG           shift, and go to state 123
    PARENTHESE_L  shift, and go to state 124
    PARENTHESE_R  shift, and go to state 366
    POST_ADD      shift, and go to state 125
    POST_SUB      shift, and go to state 126
    AND_OP        shift, and go to state 128
    NOT           shift, and go to state 129
    IDENTITY      shift, and go to state 130
    INT_NUM       shift, and go to state 131
    FLOAT_NUM     shift, and go to state 132
    STRING        shift, and go to state 133

    exp               go to state 367
    assignment_exp    go to state 185
    conditional_exp   go to state 160
    logical_or_exp    go to state 136
    logical_and_exp   go to state 137
    inclusive_or_exp  go to state 138
    exclusive_or_exp  go to state 139
    and_exp           go to state 140
    equality_exp      go to state 141
    relational_exp    go to state 142
    shift_expression  go to state 143
    additive_exp      go to state 144
    mult_exp          go to state 145
    cast_exp          go to state 146
    unary_exp         go to state 161
    unary_operator    go to state 148
    postfix_exp       go to state 149
    primary_exp       go to state 162
    const_type        go to state 151


State 359

  131 selection_stat: IF PARENTHESE_L exp PARENTHESE_R stat ELSE . stat

    BREAK     shift, and go to state 85
    CASE      shift, and go to state 86
    COLON     shift, and go to state 87
    CONTINUE  shift, and go to state 88
    DEFAULT   shift, and go to state 89
    DO        shift, and go to state 90
    FOR       shift, and go to state 91
    GOTO      shift, and go to state 92
    IF        shift, and go to state 93
    RETURN    shift, and go to state 94
    SWITCH    shift, and go to state 95
    WHILE     shift, and go to state 96
    SEMI      shift, and go to state 97
    BRACE_L   shift, and go to state 58
    IDENTITY  shift, and go to state 178

    stat            go to state 368
    labeled_stat    go to state 102
    exp_stat        go to state 103
    compound_stat   go to state 104
    selection_stat  go to state 106
    iteration_stat  go to state 107
    jump_stat       go to state 108


State 360

  134 iteration_stat: DO stat WHILE PARENTHESE_L exp PARENTHESE_R SEMI .

    $default  reduce using rule 134 (iteration_stat)


State 361

  141 iteration_stat: FOR PARENTHESE_L SEMI SEMI exp PARENTHESE_R stat .

    $default  reduce using rule 141 (iteration_stat)


State 362

  140 iteration_stat: FOR PARENTHESE_L SEMI exp SEMI PARENTHESE_R stat .

    $default  reduce using rule 140 (iteration_stat)


State 363

  139 iteration_stat: FOR PARENTHESE_L SEMI exp SEMI exp PARENTHESE_R . stat

    BREAK     shift, and go to state 85
    CASE      shift, and go to state 86
    COLON     shift, and go to state 87
    CONTINUE  shift, and go to state 88
    DEFAULT   shift, and go to state 89
    DO        shift, and go to state 90
    FOR       shift, and go to state 91
    GOTO      shift, and go to state 92
    IF        shift, and go to state 93
    RETURN    shift, and go to state 94
    SWITCH    shift, and go to state 95
    WHILE     shift, and go to state 96
    SEMI      shift, and go to state 97
    BRACE_L   shift, and go to state 58
    IDENTITY  shift, and go to state 178

    stat            go to state 369
    labeled_stat    go to state 102
    exp_stat        go to state 103
    compound_stat   go to state 104
    selection_stat  go to state 106
    iteration_stat  go to state 107
    jump_stat       go to state 108


State 364

  138 iteration_stat: FOR PARENTHESE_L exp SEMI SEMI PARENTHESE_R stat .

    $default  reduce using rule 138 (iteration_stat)


State 365

  137 iteration_stat: FOR PARENTHESE_L exp SEMI SEMI exp PARENTHESE_R . stat

    BREAK     shift, and go to state 85
    CASE      shift, and go to state 86
    COLON     shift, and go to state 87
    CONTINUE  shift, and go to state 88
    DEFAULT   shift, and go to state 89
    DO        shift, and go to state 90
    FOR       shift, and go to state 91
    GOTO      shift, and go to state 92
    IF        shift, and go to state 93
    RETURN    shift, and go to state 94
    SWITCH    shift, and go to state 95
    WHILE     shift, and go to state 96
    SEMI      shift, and go to state 97
    BRACE_L   shift, and go to state 58
    IDENTITY  shift, and go to state 178

    stat            go to state 370
    labeled_stat    go to state 102
    exp_stat        go to state 103
    compound_stat   go to state 104
    selection_stat  go to state 106
    iteration_stat  go to state 107
    jump_stat       go to state 108


State 366

  136 iteration_stat: FOR PARENTHESE_L exp SEMI exp SEMI PARENTHESE_R . stat

    BREAK     shift, and go to state 85
    CASE      shift, and go to state 86
    COLON     shift, and go to state 87
    CONTINUE  shift, and go to state 88
    DEFAULT   shift, and go to state 89
    DO        shift, and go to state 90
    FOR       shift, and go to state 91
    GOTO      shift, and go to state 92
    IF        shift, and go to state 93
    RETURN    shift, and go to state 94
    SWITCH    shift, and go to state 95
    WHILE     shift, and go to state 96
    SEMI      shift, and go to state 97
    BRACE_L   shift, and go to state 58
    IDENTITY  shift, and go to state 178

    stat            go to state 371
    labeled_stat    go to state 102
    exp_stat        go to state 103
    compound_stat   go to state 104
    selection_stat  go to state 106
    iteration_stat  go to state 107
    jump_stat       go to state 108


State 367

  135 iteration_stat: FOR PARENTHESE_L exp SEMI exp SEMI exp . PARENTHESE_R stat
  149 exp: exp . COMMA assignment_exp

    COMMA         shift, and go to state 262
    PARENTHESE_R  shift, and go to state 372


State 368

  131 selection_stat: IF PARENTHESE_L exp PARENTHESE_R stat ELSE stat .

    $default  reduce using rule 131 (selection_stat)


State 369

  139 iteration_stat: FOR PARENTHESE_L SEMI exp SEMI exp PARENTHESE_R stat .

    $default  reduce using rule 139 (iteration_stat)


State 370

  137 iteration_stat: FOR PARENTHESE_L exp SEMI SEMI exp PARENTHESE_R stat .

    $default  reduce using rule 137 (iteration_stat)


State 371

  136 iteration_stat: FOR PARENTHESE_L exp SEMI exp SEMI PARENTHESE_R stat .

    $default  reduce using rule 136 (iteration_stat)


State 372

  135 iteration_stat: FOR PARENTHESE_L exp SEMI exp SEMI exp PARENTHESE_R . stat

    BREAK     shift, and go to state 85
    CASE      shift, and go to state 86
    COLON     shift, and go to state 87
    CONTINUE  shift, and go to state 88
    DEFAULT   shift, and go to state 89
    DO        shift, and go to state 90
    FOR       shift, and go to state 91
    GOTO      shift, and go to state 92
    IF        shift, and go to state 93
    RETURN    shift, and go to state 94
    SWITCH    shift, and go to state 95
    WHILE     shift, and go to state 96
    SEMI      shift, and go to state 97
    BRACE_L   shift, and go to state 58
    IDENTITY  shift, and go to state 178

    stat            go to state 373
    labeled_stat    go to state 102
    exp_stat        go to state 103
    compound_stat   go to state 104
    selection_stat  go to state 106
    iteration_stat  go to state 107
    jump_stat       go to state 108


State 373

  135 iteration_stat: FOR PARENTHESE_L exp SEMI exp SEMI exp PARENTHESE_R stat .

    $default  reduce using rule 135 (iteration_stat)
